{
	"info": {
		"_postman_id": "2356e42d-4385-4f2a-abb4-44fb9c5854fe",
		"name": "HelloCash API",
		"description": "Integrate HelloCash with your service. The HelloCash API is intended for several types of business third-party integrations. It includes support for all types of credit transfers.\n\nAfter Authentication, a member's transfer history may be accessed and new transfers created.\n\nMost members need two-factor authorization to complete transfers. This process can be initiated with the /authorize endpoint. One or more PREPARED transfers, batch items or invoices may be authorized in one go.\n\nTo setup connections, webhooks and authentication, you may use the HelloCash portal https://portal.hellocash.net or the /connections API below, or ask the HelloCash support helpdesk.\n\nNote: Using the standard print option in most browsers, you can save this documentation as a pdf file.\n\n## General:\n\n* /authenticate for logging in and getting a Bearer token API key. The API key must be passed as Authorization: Bearer <token> header on all other requests.\n* /transfers for checking transfer history and making new transfers to other members, if allowed\n* /accounts for accessing multiple accounts from one login, if allowed\n* /airtime for performing airtime topup.\n* /invoices for entering and retrieving status of invoices.\n* /connections for remote access tokens, ip whitelist setting, and webhook settings.\n* /authorize for selecting transfers for two-factor authorization over mobile phone.\n\n## Integration styles\n\nThere are several ways to use the HelloCash API, depending on the intended use-case.\n\n1. Make HelloCash transfers from your account using POST /transfers\n2. Make HelloCash transfers from your account using POST /transfers, then interact with the transfer using webhooks\n3. Receive HelloCash payments to your account, listening to webhook AUTHENTICATING, RECEIVED and/or PROCESSED events\n4. Allow HelloCash users to send you transfer requests, and process them by listening to PREPARED webhook events\n5. Make HelloCash transfers, with potential later transfer amendments using PUT /transfers/{id}\n\nFor making transfers, and any other direct HelloCash API access like getting a list of transfers, you will need to setup a refresh token in /connections which must be stored securely in your server.\n\nFor many integrations it is possible to use only webhooks, without the need of direct api calls. This can make it easy to support sophisticated integrations with high reliability.\nWebhooks allow the complex retry, timeout and error logic to be handled mostly on HelloCash side.\n\n## Account number formats\nHelloCash supports several types of account formats for a single account number.\n- Mobile phone number with leading international country code, +251912345678\n- Short 7 digit account numbers for business, agents, tellers\n- Long 12 digit account numbers for all other users\n- Special account names\n\nShort and long account numbers both are protected against any single-digit typing mistake.\nIt is guaranteed that a single typing mistake in a 7 or 12 digit number will never result in finding a\ndifferent account.\n      \n## Mobile phone number format\nThe HelloCash API supports only one mobile phone format, international with leading +2519 followed by 8 digits.\nHere is an example javascript function to allow a user to enter phone numbers in most common formats, and transform to the \nHelloCash format. This can be used on a website to check user entry or fix user entry before sending to HelloCash API\n\n<pre>\n<span style='color:#008000; '>// Formats supported: 9xxxxxxxx  09xxxxxxxx 2519xxxxxxxx and +2519xxxxxxxx with spaces, comma, periods, brackets.</span>\n<span style='color:#008000; '>// The return value is empty (null) when the format is not supported.</span>\n<span style='color:#0000ff; font-weight:bold; '>function</span> cleanupMobilePhone<span style='color:#0000ff; '>(</span>num<span style='color:#0000ff; '>)</span> <span style='color:#0000ff; '>{</span>\n    <span style='color:#008000; '>// First remove any non-digits characters like in 09-12.34.56 78</span>\n  <span style='color:#0000ff; font-weight:bold; '>var</span> digits<span style='color:#0000ff; '>=</span>num <span style='color:#0000ff; '>&amp;&amp;</span> num<span style='color:#0000ff; '>.</span><span style='color:#0000ff; font-weight:bold; '>replace</span><span style='color:#0000ff; '>(</span><span style='color:#0000e6; '>/</span><span style='color:#0000ff; '>[</span><span style='color:#0000ff; '>-</span><span style='color:#0000e6; '> )(</span><span style='color:#0000e6; '>\\.</span><span style='color:#0000ff; '>]</span><span style='color:#0000e6; '>/</span><span style='color:#0000ff; font-weight:bold; '>g</span><span style='color:#0000ff; '>,</span><span style='color:#0000e6; '>'</span><span style='color:#0000e6; '>'</span><span style='color:#0000ff; '>)</span>\n  <span style='color:#008000; '>// Match leading +2519 or 2519 or 09 or 9 followed by exactly 8 digits</span>\n    <span style='color:#0000ff; '>.</span><span style='color:#0000ff; font-weight:bold; '>match</span><span style='color:#0000ff; '>(</span><span style='color:#0000e6; '>/</span><span style='color:#0000ff; '>^</span><span style='color:#0000ff; '>(</span><span style='color:#0000e6; '>\\+</span><span style='color:#0000ff; '>?</span><span style='color:#0000e6; '>251</span><span style='color:#0000ff; '>|</span><span style='color:#0000e6; '>0</span><span style='color:#0000ff; '>)</span><span style='color:#0000ff; '>?</span><span style='color:#0000e6; '>9</span><span style='color:#0000ff; '>(</span><span style='color:#800080; font-weight:bold; '>\\d</span><span style='color:#800080; font-weight:bold; '>\\d</span><span style='color:#800080; font-weight:bold; '>\\d</span><span style='color:#800080; font-weight:bold; '>\\d</span><span style='color:#800080; font-weight:bold; '>\\d</span><span style='color:#800080; font-weight:bold; '>\\d</span><span style='color:#800080; font-weight:bold; '>\\d</span><span style='color:#800080; font-weight:bold; '>\\d</span><span style='color:#0000ff; '>)</span><span style='color:#0000ff; '>$</span><span style='color:#0000e6; '>/</span><span style='color:#0000ff; '>)</span>\n  <span style='color:#008000; '>// If the string matched, return with prefix +2519</span>\n  <span style='color:#0000ff; font-weight:bold; '>if</span><span style='color:#0000ff; '>(</span>digits <span style='color:#0000ff; '>&amp;&amp;</span> digits<span style='color:#0000ff; '>[</span><span style='color:#800000; '>2</span><span style='color:#0000ff; '>]</span><span style='color:#0000ff; '>)</span> <span style='color:#0000ff; font-weight:bold; '>return</span> <span style='color:#0000e6; '>'</span><span style='color:#0000e6; '>+2519</span><span style='color:#0000e6; '>'</span><span style='color:#0000ff; '>+</span>digits<span style='color:#0000ff; '>[</span><span style='color:#800000; '>2</span><span style='color:#0000ff; '>]</span>\n  <span style='color:#0000ff; font-weight:bold; '>return</span> <span style='color:#0f4d75; '>null</span>\n<span style='color:#0000ff; '>}</span>\n<span style='color:#008000; '>// Function to show a user a phone number as returned from HelloCash API in local format.</span>\n<span style='color:#008000; '>// Simply replaces leading +2519 by 09 </span>\n<span style='color:#0000ff; font-weight:bold; '>function</span> toLocalPhone<span style='color:#0000ff; '>(</span>to<span style='color:#0000ff; '>)</span> <span style='color:#0000ff; '>{</span>\n  <span style='color:#0000ff; font-weight:bold; '>return</span> to <span style='color:#0000ff; '>&amp;&amp;</span> to<span style='color:#0000ff; '>.</span><span style='color:#0000ff; font-weight:bold; '>replace</span><span style='color:#0000ff; '>(</span><span style='color:#0000e6; '>/</span><span style='color:#0000ff; '>^</span><span style='color:#0000e6; '>\\+</span><span style='color:#0000e6; '>2519</span><span style='color:#0000e6; '>/</span><span style='color:#0000ff; '>,</span><span style='color:#0000e6; '>'</span><span style='color:#0000e6; '>09</span><span style='color:#0000e6; '>'</span><span style='color:#0000ff; '>)</span>\n<span style='color:#0000ff; '>}</span>\n</pre>\n\n## Temporary and Final states\n\nA transfer and invoice can move from one state to another state. \n\n* PROCESSED transfers are successful transfers. Only PROCESSED transfers affect account balances. A transfer in this state will not change.\n* PENDING, PREPARED and RECEIVED states are temporary and can change to a final state. Sender account balances will be reserved while\n  in these states.\n* DENIED, CANCELED, EXPIRED and final states. Any sender reserved amounts are always returned when a transfer\n  moves to these states. A transfer will always stay in this state.\n* REPLACED is a final state, that indicates the transfer was replaced by a new transfer with other parameters.\n  Replacement can happen on many transfer types, especially when sending to Mobile Phone numbers of users that still need to register.\n  (New member transfers)\n\n## End-to-end markers tracenumber and referenceid\nHelloCash supports two different end-to-end markers tracenumber and referenceid\n\nEach single transfer in HelloCash can have an optional unique tracenumber. \nA transfer is immutable after it is created with POST /transfer, its details cannot change after creation. Only the transfer state can be changed from \nto one of the final states described above. This means the tracenumber will always reference the same transfer\n\nNew member transfers, bank to bank transfers and other usecases frequently require an original transfer to be replaced with a new one with (slightly) different details.\nWhen this happens, a tracenumber is not sufficient to track the final state of both the original and its replacement transfer.\nInstead, the referenceid should be used instead of tracenumber in any case where you expect replacement transfers. The most common case is new member transfers.\n\nWhen retreiving the status of a transfer, with referenceid, you can observe all transfers (original and possible replacements) in one API call.\nBy setting the descending field true, and a limit of 1 result, the current status of a transfer and its replacement will always be the first in the returned list.\n\nIf you wish to replace an earlier transfer using the API, then the referenceid field can be used to replace an earlier transfer with a new one.\nA transfer can be replaced using PUT /transfers as long as the transfer has not been PROCESSED, and if a referenceid field is used.\n\n## Connections\nHelloCash offers a set of API connections for each user. Each connection allows additional security, webhook, ip whitelisting and authorative (pin-code-skip) configuration.\nRefresh Token access is mandatory for using the connection features.\n\n## Refresh tokens\nFor enhanced security and more features, refresh tokens should be when accessing the /authenticate endpoint. This means the HelloCash username and password do not have to be stored in your integration code, instead only the refresh token is used in your integration code.\n\nYou can use the HelloCash portal website or you can use the /connections/:id/token endpoint to create a Refresh Token for a connection.\nOnce created, you can use the refresh token in the /authenticate endpoint to obtain a bearer token.\n      \n## Webhooks\nWebhooks allow you to listen to all events happening to your transfers in the HelloCash system.\nWebhook events are formatted identical to the transfer/{id} endpoint response, with some additional fields.\nOne transfer will usually be posted several times, each time its status changes.\nEach event is sent as a separate webhook event.\n\nStatuses posted are INITIALIZING, VERIFYING, AUTHORIZING, PREPARED, PENDING, RECEIVED, PROCESSED, DENIED, CANCELED, EXPIRED, REPLACED.\n\nWebhooks can be configured from the HelloCash portal website, or by directly using the /connections endpoint described below.\nEach connection in your profile, has a webhook field. It is possible to configure multiple webhooks, one per connection.\nWhen a connection is \"authorative\", the response code of the webhook for this connection is allowed to move a transfer to a next state.\nFor non-authorative connections, the webhook response code is ignored.\n\nWebhooks will be re-sent when the network is down or when there is no response.\n      \nWebhook security has two sides. One side is for the receiver to check if the sender of the webhook is valid.\nThe other side is if the receiver of the webhook is a valid destination for the sender.\n\nA receiver can check if the sender is valid in several ways. Here are three ways we advise:\n\n- A simple solution is that webhooks will be sent from a limited small set of IPs belonging to HelloCash. Your firewall or application can be configured to allow incoming webhook messages only\nfrom these IP ranges. Please contact HelloCash support for the current list of IPs. However over time the IPs may change.\n- As every webhook is sent over https using TLS encryption in production, it is also secure to encode a secret in the webhook URL itself. \nA simple example is to give the webhook endpoint a long, random name. This endpoint name cannot be detected externally. The endpoint name will likely wind up in your web server log files though.\n- Each webhook http request is cryptographically signed with a X-Api-Hmac header, when Refresh Tokens are used.\nThe X-Api-Hmac header is a lower-case hex encoded SHA256 HMAC of the connection secret and the webhook payload.\nThe connection secret used for HMAC encoding is shown when creating a Refresh Token from the HelloCash portal exactly once. It cannot be recovered later.\nExample SHA256 HMAC check calculation in nodejs:\n\n<pre>\n<span style='color:#0000ff; font-weight:bold; '>var</span> crypto<span style='color:#0000ff; '>=</span>require<span style='color:#0000ff; '>(</span><span style='color:#0000e6; '>'</span><span style='color:#0000e6; '>crypto</span><span style='color:#0000e6; '>'</span><span style='color:#0000ff; '>)</span>\n<span style='color:#008000; '>// The connection secret is shown only once during creation of Refresh Token from portal.</span>\n<span style='color:#0000ff; font-weight:bold; '>var</span> connectionSecret <span style='color:#0000ff; '>=</span> <span style='color:#0000e6; '>'</span><span style='color:#0000e6; '>kqw45kSDt87eu52m35hkqsdovu7afdstk</span><span style='color:#0000e6; '>'</span>\n\napp<span style='color:#0000ff; '>.</span>post<span style='color:#0000ff; '>(</span><span style='color:#0000e6; '>'</span><span style='color:#0000e6; '>/mywebhook</span><span style='color:#0000e6; '>'</span><span style='color:#0000ff; '>,</span> <span style='color:#0000ff; font-weight:bold; '>function</span><span style='color:#0000ff; '>(</span>req<span style='color:#0000ff; '>,</span> res<span style='color:#0000ff; '>)</span> <span style='color:#0000ff; '>{</span>\n  <span style='color:#0000ff; font-weight:bold; '>var</span> payload <span style='color:#0000ff; '>=</span> req<span style='color:#0000ff; '>.</span>body <span style='color:#008000; '>// The JSON-encoded UTF-8 text of the webhook </span>\n  <span style='color:#0000ff; font-weight:bold; '>var</span> hmac <span style='color:#0000ff; '>=</span> crypto<span style='color:#0000ff; '>.</span>createHmac<span style='color:#0000ff; '>(</span><span style='color:#0000e6; '>'</span><span style='color:#0000e6; '>sha256</span><span style='color:#0000e6; '>'</span><span style='color:#0000ff; '>,</span> Buffer<span style='color:#0000ff; '>.</span>from<span style='color:#0000ff; '>(</span>connectionSecret<span style='color:#0000ff; '>))</span> <span style='color:#008000; '>// Calulate first part of hmac</span>\n  <span style='color:#0000ff; font-weight:bold; '>var</span> hmaxHex <span style='color:#0000ff; '>=</span> hmac<span style='color:#0000ff; '>.</span>update<span style='color:#0000ff; '>(</span>payload<span style='color:#0000ff; '>)</span><span style='color:#0000ff; '>.</span>digest<span style='color:#0000ff; '>(</span><span style='color:#0000e6; '>'</span><span style='color:#0000e6; '>hex</span><span style='color:#0000e6; '>'</span><span style='color:#0000ff; '>)</span> <span style='color:#008000; '>// Calculate rest of hmac, then convert to hex</span>\n  <span style='color:#0000ff; font-weight:bold; '>var</span> hmacIsCorrect <span style='color:#0000ff; '>=</span> <span style='color:#0000ff; '>(</span>req<span style='color:#0000ff; '>.</span>headers<span style='color:#0000ff; '>[</span><span style='color:#0000e6; '>'</span><span style='color:#0000e6; '>X-Api-Hmac</span><span style='color:#0000e6; '>'</span><span style='color:#0000ff; '>]</span> <span style='color:#0000ff; '>===</span> hmacHex<span style='color:#0000ff; '>)</span>\n  <span style='color:#0000ff; font-weight:bold; '>if</span><span style='color:#0000ff; '>(</span><span style='color:#0000ff; '>!</span>hmacIsCorrect<span style='color:#0000ff; '>)</span> <span style='color:#0000ff; '>{</span>\n  <span style='color:#008000; '>  // Handle error case, HMAC is not correct - possible hack attempt.</span>\n  <span style='color:#0000ff; '>}</span>\n<span style='color:#0000ff; '>}</span>\n</pre>\n\nThe HelloCash webhook sender can check for a valid destination supporting full HTTPS certificate checks of the destination.\nIt is advised to fully implement valid certificate checks with DNS for this reason, and to set the certificatecheck option to \"true\" in the connection settings.\nYou may also chose to use a fixed IP address as webhook destination. DNS is completely bypassed in this case even though certificate checks are not possible.\nUsing a fixed IP also provides the webhook sender with a measure of security that the destination is valid, although still full DNS with certificate checks is more secure.\n\n### Transfer and Invoice States\n* PROCESSED, DENIED, CANCELED, EXPIRED and REPLACED are final states. A transfer will always stay in this state.\n* INITIALIZING, VERIFYING and AUTHORIZING status are short-term transient states. \n  A transfer in one of these three states does not yet have an id. An invoice will have an invoiceid.\n  Within 15 seconds the transfer will move to a different state, or will expire.\n* PREPARED, PENDING and RECEIVED are long-term transient states.\n  A transfer in these states has an id and can stay in this state indefinitely.\n  The status of these transfers may change to one of the final states over time.\n\n### INITIALIZING, VERIFYING, AUTHORIZING\nThe INITIALIZING status is sent before a new invoice is accepted from POST /invoices in HelloCash\n\nThe VERIFYING status is sent during the POST /transfer/{id}/verify request. \n\nThe AUTHORIZING status is sent just before a payment is created.\n\nFor the three states INITIALIZING, VERIFYING, AUTHORIZING, the webhook http response status code will be inspected to check if the \ntransfer should be allowed to go ahead to the next state and be created. This allows a 3rd party integration\nto perform checks on amount and description field based on an external lookup.\nNote the webhook response for INITIALIZING, VERIFYING, AUTHORIZING is inspected for both authorative and non-authorative webhooks.\n\nThe response body and content type are ignored, only the http status code present in the http header is checked.\n\n* Any response between 200 and 299 will allow the transfer to go ahead to the next state.\n* Any response between 400 and 499 will generate a final error on the frontend (e.g. transfer details are incorrect)\n* Any response between 500 and 599 except 530 will generate a tempororary error response to the frontend (e.g. please try again later)\n* Response 530 will cause the payment to be left in its current state without change.\n\nThe maximum response time for the INITIALIZING, VERIFYING and AUTHORIZING states is fixed at 15 seconds, which is the time the response can be presented back to\nthe user over USSD or web. The INITIALIZING, VERIFYING and AUTHORIZING events are never retried towards the webhook.\nAn end-user can start a new transfer request which will result in a new AUTHORIZING event.\n\n### PREPARED, RECEIVED\nThe PREPARED and RECEIVED states happen are conditional states, which occur in specific cases.\nThe sender must take action on a PREPARED status. The PREPARED status is sent after a payment is created, and needs additional authorization, but is not yet confirmed by the payer (usually with pin-code).\nThe receiver must take action on a RECEIVED status. The RECEIVED status is sent after a payment is confirmed by the payer (usually with pin-code), but needs additional authorization from the receiver.\n\n\nFor the PREPARED state, the sender's webhook http response code will be inspected to check if the \ntransfer should be allowed to go ahead to the next state.\nFor the RECEIVED state, the receiver's webhook http response code will be inspected to check if the \ntransfer should be allowed to go ahead to the next state.\nThis allows a 3rd party integration to perform actions on another system, and to report success or failure back to HelloCash resulting in transfer accept or cancel.\n\nThe webhook response code for PREPARED and RECEIVED is inspected *only* for authorative webhooks, that is webhooks configured for a connection that has its authorative field set to true.\nThe webhook response for non-authorative webhooks is ignored.\nA webhook body contains the same information as a GET transfer/{id} has. Additionally the webhook body has field \"canauthorize\" informing if the transfer webhook response code will be honoured.\n\nThe PREPARED status is sent after a payment is created, but not yet confirmed by the payer (usually with pin-code).\nIf this payment is sent from your account to another user, then the http webhook response status code will be used to move\nthis transfer into the next state.  \n \nif the webhook has been configured to need RECEIVER acceptance of incoming transfers.\nIf this payment is sent from another user to your account, then the http webhook response status code will be used to move\nthis transfer into the next state.  \n\nFor the two states PREPARED and RECEIVED, the webhook response http status code will be inspected to check if the \ntransfer should be allowed to go ahead to the next state and be created. This allows a 3rd party integration\nto perform checks on amount and description field based on an external lookup. This event will be retried every 60 seconds by default, for one day by default.\nAfter there was no response for any of the retries and the timeout expires, transfers will automatically be DENIED.\n\nThe response body and content type are ignored, only the http status code present in the http header is checked.\n\n* Any response between 200 and 299 will allow the transfer to go ahead to PROCESSED state.\n* Any response between 400 and 499 will make the transfer go to DENIED state\n* Any response between 500 and 599 except 530 will be ignored and the event will be sent again after 60 seconds.\n* Response 530 will cause the payment to be left in its PREPARED or RECEIVED state without change, but will not be sent again. If any other webhooks are pending they will be sent.\n\n### PROCESSED, CANCELED, DENIED, EXPIRED, REPLACED\nThe states PROCESSED, CANCELED, DENIED, EXPIRED and REPLACED are final. \nThe webhook event is sent until there is a http response code reply between 200 and 499. \nIf a webhook does not reply, or if a webhook replies with a http status between 500 and 599,\nthe webhook will be retried after 60 s by default.\n\nA REPLACED transfer, is a transfer that is replaced by a new transfer with different parameters, \nand potentially different fees. Transfers are REPLACED when sending funds to a new member or when using the PUT /transfers endpoint.\nFor new member transfers, once the intended destination registers their account, the original transfer is REPLACED by a \nfinal transfer within a few seconds.\n\nAn EXPIRED event only occurs for invoices, if the invoice was not paid or cancelled before the expiration date.\nAfter expiration invoices may be cleaned up by the system.\n\n### Processing speed, response times, retries, and timeouts\n\nWebhooks are sent one at a time. After every webhook is sent out, the HelloCash API will wait for a webhook response to come back for up to a maximum delay of the retry time, minus 5 seconds.\n(the retry time is 60 seconds by default, see /connections)\nIf there are more webhooks to be sent, they will be queued up and sent one by one.\nThis allows for simple processing of webhook events as they will not run in parallel.\n\nThe simple one-by-one processing model does limit the maximum throughput of webhooks and the maximum number of transfers per minute that can be handled to the speed of the response coming back.\n\nA practical speed limit for this simple one-by-one webhook is around 30 transfers per minute. That allows for around 1 second of processing and 1 second of network latency to build up the connection.\nHTTPS uses TLS for encryption, and TLS requires several roundtrips between the HelloCash server and the receiver to start the connection for each webhook - 1 second of network latency is a reasonable number.\n\nIf your webhook handler requires more time to process than the average number of events being sent, there will be a large backlog of events to be sent. \nThere are several programming techniques to handle the load once the transfers come in faster than the simple model allows.\n\nThe easiest way to speed up the process is to reduce the time for a response to arrive on HelloCash side. In many programming languages you can close the connection and send a 200 OK (or any other http status) and keep processing in the background.\nThe drawback is you already need to know the response code early during the processing.\nAnother gotcha is that multiple parallel background jobs will then be running, which can lead to race conditions.\n\nIn PHP this can be done with fastcgi_finish_request(), or flush() depending on the web server environment used.\nIn nodejs/express a res.status(200).json() should be sufficient, after this processing can continue\n\nIf necessary there are possibilities to send webhooks in parallel from HelloCash, and other implementation options for very high number of transactions per second.\nPlease contact our support team for more details.\n\n### HelloCash API handling network issues\n\nThe HelloCash API is served from and the Webhooks are sent from the HelloCash servers in Addis Abeba. The Internet is very reliable, most of the time. During other times, it can be challenging to send or recieve messages.\nAPI REST messages sent to the HelloCash API, can be lost along the way and never arrive at our servers.\nAlso, REST messages can actually arrive on the HelloCash servers, be processed, and a response sent back - but the response disappears into thin air.\nBoth cases can also happen for webhooks.\n\nThis is why it is important to allow for re-sending or re-trying of API events, if there is no response from the HelloCash API. All HelloCash API endpoints support retry mechanisms protecting against making a transfer twice, by using the referenceid or tracenumber.\nAlso, it is always possible to request the status of any transfer sent earlier using the referenceid or tracenumber.\nWebhooks are re-sent as often as necessary to recieve on HelloCash side an answer.\n\nDue to network response loss, any webhook may be sent twice, even after you have sent back a final status code (200-299 or 400-499) if an earlier response to the webhook is lost along the way somewhere in the internet. \nFor such cases, your webhook handler should send the same (final) http status code it did the first time, if it encounters a duplicate request.\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "authenticate",
			"item": [
				{
					"name": "Authenticate a user with username and password or long term refresh token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data =  JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable('token',data.token)\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"principal\": \"1754045\",\n    \"system\": \"lucy\",\n    \"credentials\": \"mike123@\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/authenticate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authenticate"
							]
						},
						"description": "Authenticate a user with username and password, or with a long term refresh token. Returns a Bearer API token. The token is valid maximum 24 hours.\nThe API token must be passed as header with Authorization: Bearer <token> on all subsequent accesses to the HelloCash API.\n"
					},
					"response": [
						{
							"name": "Successful login, token with validity",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"principal\": \"2427384\",\n    \"system\": \"lucy\",\n    \"credentials\": \"<string>\",\n    \"token\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/authenticate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"token\": \"aliquip occaecat\"\n}"
						},
						{
							"name": "Login error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"principal\": \"2427384\",\n    \"system\": \"lucy\",\n    \"credentials\": \"<string>\",\n    \"token\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/authenticate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authenticate"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
						}
					]
				},
				{
					"name": "Change a user's password. Returns a Bearer API token on successful change.",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"principal\": \"<string>\",\n    \"credentials0\": \"<string>\",\n    \"credentials1\": \"<string>\",\n    \"credentials2\": \"<string>\",\n    \"system\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/authenticate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authenticate"
							]
						}
					},
					"response": [
						{
							"name": "Successful login, token with validity",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"principal\": \"2427384\",\n    \"credentials0\": \"<string>\",\n    \"credentials1\": \"<string>\",\n    \"credentials2\": \"<string>\",\n    \"system\": \"lucy\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/authenticate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"token\": \"aliquip occaecat\"\n}"
						},
						{
							"name": "Login error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"principal\": \"2427384\",\n    \"credentials0\": \"<string>\",\n    \"credentials1\": \"<string>\",\n    \"credentials2\": \"<string>\",\n    \"system\": \"lucy\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/authenticate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authenticate"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
						}
					]
				}
			]
		},
		{
			"name": "accounts",
			"item": [
				{
					"name": "Finds a list of accounts visible.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/accounts?offset=0&limit=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "offset, must be multiple of limit"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "limit number of returned results"
								}
							]
						}
					},
					"response": [
						{
							"name": "Request was successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts?offset=0&limit=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									],
									"query": [
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "10"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"252464:CUS\",\n  \"balance\": 1432.63,\n  \"reservedamount\": 10.34,\n  \"currency\": \"ETB\",\n  \"creditlimit\": 0,\n  \"dailylimit\": 0,\n  \"name\": \"Fitsum Abebe Tizane\",\n  \"group\": \"regcusts\",\n  \"type\": \"REGULAR\"\n },\n {\n  \"id\": \"252464:CUS\",\n  \"balance\": 1432.63,\n  \"reservedamount\": 10.34,\n  \"currency\": \"ETB\",\n  \"creditlimit\": 0,\n  \"dailylimit\": 0,\n  \"name\": \"Fitsum Abebe Tizane\",\n  \"group\": \"regcusts\",\n  \"type\": \"REGULAR\"\n }\n]"
						},
						{
							"name": "Account error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts?offset=0&limit=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									],
									"query": [
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "10"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
						}
					]
				},
				{
					"name": "Finds one account.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/accounts/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) Account user code, followed by type code. Allowed type codes are REG, BUS, SAV"
								}
							]
						}
					},
					"response": [
						{
							"name": "Request was successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"252464:CUS\",\n \"balance\": 1432.63,\n \"reservedamount\": 10.34,\n \"currency\": \"ETB\",\n \"creditlimit\": 0,\n \"dailylimit\": 0,\n \"name\": \"Fitsum Abebe Tizane\",\n \"group\": \"regcusts\",\n \"type\": \"REGULAR\"\n}"
						},
						{
							"name": "Account fetch error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
						}
					]
				}
			]
		},
		{
			"name": "connections",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Fetch an existing connection by id.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/connections/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Connection id"
										}
									]
								},
								"description": "Note that updating a connection always requires two-factor authentication using the code field before it is active.\n"
							},
							"response": [
								{
									"name": "The parameters are incorrect",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
								},
								{
									"name": "Request was successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"token\": \"voluptate cupidatat in aliqua\",\n \"enable\": true,\n \"authorative\": false,\n \"ip\": [\n  \"ex do Duis esse\",\n  \"eiusmod do\"\n ],\n \"webhook\": \"https://callback.example.com/mycallbackhandler\",\n \"webhookmethod\": \"POST\",\n \"fromstatus\": [\n  \"INITIALIZING\",\n  \"VERIFYING\",\n  \"AUTHORIZING\",\n  \"PREPARED\",\n  \"PENDING\",\n  \"RECEIVED\",\n  \"CANCELED\",\n  \"REPLACED\",\n  \"DENIED\",\n  \"EXPIRED\",\n  \"PROCESSED\",\n  \"FAILED\"\n ],\n \"tostatus\": [\n  \"INITIALIZING\",\n  \"VERIFYING\",\n  \"PREPARED\",\n  \"PENDING\",\n  \"RECEIVED\",\n  \"CANCELED\",\n  \"DENIED\",\n  \"REPLACED\",\n  \"EXPIRED\",\n  \"PROCESSED\",\n  \"FAILED\"\n ],\n \"certificatecheck\": false,\n \"retrytime\": 60000,\n \"timeout\": 86400000,\n \"timeoutmode\": \"DENIED\",\n \"eventdate\": \"2016-12-01T08:55:32Z\",\n \"lastrequest\": {},\n \"lasterror\": {}\n}"
								}
							]
						},
						{
							"name": "Create a new connection",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": {{token}},\n    \"enable\": true,\n    \"webhook\": \"http://www.test.com/handler\",\n    \"webhookmethod\": \"POST\",\n    \"fromstatus\": [\n        \"INITIALIZING\",\n        \"EXPIRED\",\n        \"PROCESSED\",\n        \"FAILED\"\n    ],\n    \"tostatus\": [\n        \"PROCESSED\",\n        \"FAILED\"\n    ],\n    \"certificatecheck\": true,\n    \"retrytime\": 60000,\n    \"timeout\": 86400000,\n    \"timeoutmode\": \"DENIED\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/connections/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "TestCon",
											"description": "(Required) User defined id for this connection.\n"
										}
									]
								},
								"description": "A connection represents a combination of security, access control, and webhook features. Each user may have one or more connections.\nNote that creation of a new connection always requires two-factor authentication using the code field before it is active.\n"
							},
							"response": [
								{
									"name": "The parameters are incorrect",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"<string>\",\n    \"enable\": true,\n    \"authorative\": false,\n    \"ip\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"webhook\": \"https://callback.example.com/mycallbackhandler\",\n    \"webhookmethod\": \"POST\",\n    \"fromstatus\": [\n        \"INITIALIZING\",\n        \"VERIFYING\",\n        \"AUTHORIZING\",\n        \"PREPARED\",\n        \"PENDING\",\n        \"RECEIVED\",\n        \"CANCELED\",\n        \"REPLACED\",\n        \"DENIED\",\n        \"EXPIRED\",\n        \"PROCESSED\",\n        \"FAILED\"\n    ],\n    \"tostatus\": [\n        \"INITIALIZING\",\n        \"VERIFYING\",\n        \"PREPARED\",\n        \"PENDING\",\n        \"RECEIVED\",\n        \"CANCELED\",\n        \"DENIED\",\n        \"REPLACED\",\n        \"EXPIRED\",\n        \"PROCESSED\",\n        \"FAILED\"\n    ],\n    \"certificatecheck\": false,\n    \"retrytime\": 60000,\n    \"timeout\": 86400000,\n    \"timeoutmode\": \"DENIED\",\n    \"eventdate\": \"2016-12-01T08:55:32Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/connections/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
								},
								{
									"name": "Request was successful",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"<string>\",\n    \"enable\": true,\n    \"authorative\": false,\n    \"ip\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"webhook\": \"https://callback.example.com/mycallbackhandler\",\n    \"webhookmethod\": \"POST\",\n    \"fromstatus\": [\n        \"INITIALIZING\",\n        \"VERIFYING\",\n        \"AUTHORIZING\",\n        \"PREPARED\",\n        \"PENDING\",\n        \"RECEIVED\",\n        \"CANCELED\",\n        \"REPLACED\",\n        \"DENIED\",\n        \"EXPIRED\",\n        \"PROCESSED\",\n        \"FAILED\"\n    ],\n    \"tostatus\": [\n        \"INITIALIZING\",\n        \"VERIFYING\",\n        \"PREPARED\",\n        \"PENDING\",\n        \"RECEIVED\",\n        \"CANCELED\",\n        \"DENIED\",\n        \"REPLACED\",\n        \"EXPIRED\",\n        \"PROCESSED\",\n        \"FAILED\"\n    ],\n    \"certificatecheck\": false,\n    \"retrytime\": 60000,\n    \"timeout\": 86400000,\n    \"timeoutmode\": \"DENIED\",\n    \"eventdate\": \"2016-12-01T08:55:32Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/connections/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"token\": \"<string>\",\n \"enable\": true,\n \"authorative\": false,\n \"ip\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"webhook\": \"https://callback.example.com/mycallbackhandler\",\n \"webhookmethod\": \"POST\",\n \"fromstatus\": [\n  \"INITIALIZING\",\n  \"VERIFYING\",\n  \"AUTHORIZING\",\n  \"PREPARED\",\n  \"PENDING\",\n  \"RECEIVED\",\n  \"CANCELED\",\n  \"REPLACED\",\n  \"DENIED\",\n  \"EXPIRED\",\n  \"PROCESSED\",\n  \"FAILED\"\n ],\n \"tostatus\": [\n  \"INITIALIZING\",\n  \"VERIFYING\",\n  \"PREPARED\",\n  \"PENDING\",\n  \"RECEIVED\",\n  \"CANCELED\",\n  \"DENIED\",\n  \"REPLACED\",\n  \"EXPIRED\",\n  \"PROCESSED\",\n  \"FAILED\"\n ],\n \"certificatecheck\": false,\n \"retrytime\": 60000,\n \"timeout\": 86400000,\n \"timeoutmode\": \"DENIED\",\n \"eventdate\": \"2016-12-01T08:55:32Z\",\n \"lastrequest\": {},\n \"lasterror\": {}\n}"
								}
							]
						},
						{
							"name": "Update an existing connection.",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"<string>\",\n    \"token\": \"<string>\",\n    \"enable\": true,\n    \"authorative\": \"<boolean>\",\n    \"ip\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"webhook\": \"<string>\",\n    \"webhookmethod\": \"POST\",\n    \"fromstatus\": [\n        \"INITIALIZING\",\n        \"VERIFYING\",\n        \"AUTHORIZING\",\n        \"PREPARED\",\n        \"PENDING\",\n        \"RECEIVED\",\n        \"CANCELED\",\n        \"REPLACED\",\n        \"DENIED\",\n        \"EXPIRED\",\n        \"PROCESSED\",\n        \"FAILED\"\n    ],\n    \"tostatus\": [\n        \"INITIALIZING\",\n        \"VERIFYING\",\n        \"PREPARED\",\n        \"PENDING\",\n        \"RECEIVED\",\n        \"CANCELED\",\n        \"DENIED\",\n        \"REPLACED\",\n        \"EXPIRED\",\n        \"PROCESSED\",\n        \"FAILED\"\n    ],\n    \"certificatecheck\": true,\n    \"retrytime\": 60000,\n    \"timeout\": 86400000,\n    \"timeoutmode\": \"DENIED\",\n    \"eventdate\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/connections/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Connection id"
										}
									]
								},
								"description": "Note that updating a connection always requires two-factor authentication before it is active, in the code field.\n"
							},
							"response": [
								{
									"name": "The parameters are incorrect",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"<string>\",\n    \"token\": \"<string>\",\n    \"enable\": true,\n    \"authorative\": false,\n    \"ip\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"webhook\": \"https://callback.example.com/mycallbackhandler\",\n    \"webhookmethod\": \"POST\",\n    \"fromstatus\": [\n        \"INITIALIZING\",\n        \"VERIFYING\",\n        \"AUTHORIZING\",\n        \"PREPARED\",\n        \"PENDING\",\n        \"RECEIVED\",\n        \"CANCELED\",\n        \"REPLACED\",\n        \"DENIED\",\n        \"EXPIRED\",\n        \"PROCESSED\",\n        \"FAILED\"\n    ],\n    \"tostatus\": [\n        \"INITIALIZING\",\n        \"VERIFYING\",\n        \"PREPARED\",\n        \"PENDING\",\n        \"RECEIVED\",\n        \"CANCELED\",\n        \"DENIED\",\n        \"REPLACED\",\n        \"EXPIRED\",\n        \"PROCESSED\",\n        \"FAILED\"\n    ],\n    \"certificatecheck\": false,\n    \"retrytime\": 60000,\n    \"timeout\": 86400000,\n    \"timeoutmode\": \"DENIED\",\n    \"eventdate\": \"2016-12-01T08:55:32Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/connections/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
								},
								{
									"name": "Request was successful",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"<string>\",\n    \"token\": \"<string>\",\n    \"enable\": true,\n    \"authorative\": false,\n    \"ip\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"webhook\": \"https://callback.example.com/mycallbackhandler\",\n    \"webhookmethod\": \"POST\",\n    \"fromstatus\": [\n        \"INITIALIZING\",\n        \"VERIFYING\",\n        \"AUTHORIZING\",\n        \"PREPARED\",\n        \"PENDING\",\n        \"RECEIVED\",\n        \"CANCELED\",\n        \"REPLACED\",\n        \"DENIED\",\n        \"EXPIRED\",\n        \"PROCESSED\",\n        \"FAILED\"\n    ],\n    \"tostatus\": [\n        \"INITIALIZING\",\n        \"VERIFYING\",\n        \"PREPARED\",\n        \"PENDING\",\n        \"RECEIVED\",\n        \"CANCELED\",\n        \"DENIED\",\n        \"REPLACED\",\n        \"EXPIRED\",\n        \"PROCESSED\",\n        \"FAILED\"\n    ],\n    \"certificatecheck\": false,\n    \"retrytime\": 60000,\n    \"timeout\": 86400000,\n    \"timeoutmode\": \"DENIED\",\n    \"eventdate\": \"2016-12-01T08:55:32Z\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/connections/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"token\": \"<string>\",\n \"enable\": true,\n \"authorative\": false,\n \"ip\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"webhook\": \"https://callback.example.com/mycallbackhandler\",\n \"webhookmethod\": \"POST\",\n \"fromstatus\": [\n  \"INITIALIZING\",\n  \"VERIFYING\",\n  \"AUTHORIZING\",\n  \"PREPARED\",\n  \"PENDING\",\n  \"RECEIVED\",\n  \"CANCELED\",\n  \"REPLACED\",\n  \"DENIED\",\n  \"EXPIRED\",\n  \"PROCESSED\",\n  \"FAILED\"\n ],\n \"tostatus\": [\n  \"INITIALIZING\",\n  \"VERIFYING\",\n  \"PREPARED\",\n  \"PENDING\",\n  \"RECEIVED\",\n  \"CANCELED\",\n  \"DENIED\",\n  \"REPLACED\",\n  \"EXPIRED\",\n  \"PROCESSED\",\n  \"FAILED\"\n ],\n \"certificatecheck\": false,\n \"retrytime\": 60000,\n \"timeout\": 86400000,\n \"timeoutmode\": \"DENIED\",\n \"eventdate\": \"2016-12-01T08:55:32Z\"\n}"
								}
							]
						},
						{
							"name": "Delete an existing connection.",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/connections/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Connection id"
										}
									]
								},
								"description": "Note that updating a connection always requires two-factor authentication before it is active, in the code field.\n"
							},
							"response": [
								{
									"name": "The parameters are incorrect",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
								},
								{
									"name": "Request was successful",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Generate a signed and authorized refresh token for an existing connection",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/connections/:id/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										":id",
										"token"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Connection id"
										}
									]
								},
								"description": "This generates a refresh token code that can be used in integrations. A verification code must be supplied in the code field.\nA refresh token is a long-term valid token which may be used in place of username/password in the /authenticate endpoint \nto obtain a short-term access token. When a refresh token is used during /authenticate, then the connection options for skipping PIN code check,\nand IP whitelisting are used.\nA token generated for a connection will stay valid indefinitely until its connection is removed.\n"
							},
							"response": [
								{
									"name": "Request was successful, with token and sign secret used for X-Api-Hmac header",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/:id/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												":id",
												"token"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"token\": \"est sunt\",\n \"signsecret\": \"ex elit\"\n}"
								},
								{
									"name": "The parameters are incorrect",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/:id/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												":id",
												"token"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get a list of connections",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// var Header = require('postman-collection').Header\r",
									"// pm.request.headers.add(new Header(\"Authorization: Bearer \" + pm.environment.get('token')))\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/connections",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"connections"
							]
						}
					},
					"response": [
						{
							"name": "The parameters are incorrect",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/connections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
						},
						{
							"name": "Request was successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/connections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"token\": \"fugiat cillum irure dolor\",\n  \"enable\": true,\n  \"authorative\": false,\n  \"ip\": [\n   \"id cupidatat eu et sunt\",\n   \"elit\"\n  ],\n  \"webhook\": \"https://callback.example.com/mycallbackhandler\",\n  \"webhookmethod\": \"POST\",\n  \"fromstatus\": [\n   \"INITIALIZING\",\n   \"VERIFYING\",\n   \"AUTHORIZING\",\n   \"PREPARED\",\n   \"PENDING\",\n   \"RECEIVED\",\n   \"CANCELED\",\n   \"REPLACED\",\n   \"DENIED\",\n   \"EXPIRED\",\n   \"PROCESSED\",\n   \"FAILED\"\n  ],\n  \"tostatus\": [\n   \"INITIALIZING\",\n   \"VERIFYING\",\n   \"PREPARED\",\n   \"PENDING\",\n   \"RECEIVED\",\n   \"CANCELED\",\n   \"DENIED\",\n   \"REPLACED\",\n   \"EXPIRED\",\n   \"PROCESSED\",\n   \"FAILED\"\n  ],\n  \"certificatecheck\": false,\n  \"retrytime\": 60000,\n  \"timeout\": 86400000,\n  \"timeoutmode\": \"DENIED\",\n  \"eventdate\": \"2016-12-01T08:55:32Z\",\n  \"lastrequest\": {},\n  \"lasterror\": {}\n },\n {\n  \"token\": \"irure\",\n  \"enable\": true,\n  \"authorative\": false,\n  \"ip\": [\n   \"mollit proident consequat elit\",\n   \"nostrud in ipsum\"\n  ],\n  \"webhook\": \"https://callback.example.com/mycallbackhandler\",\n  \"webhookmethod\": \"POST\",\n  \"fromstatus\": [\n   \"INITIALIZING\",\n   \"VERIFYING\",\n   \"AUTHORIZING\",\n   \"PREPARED\",\n   \"PENDING\",\n   \"RECEIVED\",\n   \"CANCELED\",\n   \"REPLACED\",\n   \"DENIED\",\n   \"EXPIRED\",\n   \"PROCESSED\",\n   \"FAILED\"\n  ],\n  \"tostatus\": [\n   \"INITIALIZING\",\n   \"VERIFYING\",\n   \"PREPARED\",\n   \"PENDING\",\n   \"RECEIVED\",\n   \"CANCELED\",\n   \"DENIED\",\n   \"REPLACED\",\n   \"EXPIRED\",\n   \"PROCESSED\",\n   \"FAILED\"\n  ],\n  \"certificatecheck\": false,\n  \"retrytime\": 60000,\n  \"timeout\": 86400000,\n  \"timeoutmode\": \"DENIED\",\n  \"eventdate\": \"2016-12-01T08:55:32Z\",\n  \"lastrequest\": {},\n  \"lasterror\": {}\n }\n]"
						}
					]
				}
			]
		},
		{
			"name": "transfers",
			"item": [
				{
					"name": "batch",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Returns the status of an earlier supplied batch of transfers as an array. There is one result per transfer.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/transfers/batch/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transfers",
												"batch",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Batch ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "The parameters are incorrect, or the transfer failed",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/transfers/batch/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"transfers",
														"batch",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
										},
										{
											"name": "Request was successful",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/transfers/batch/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"transfers",
														"batch",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"id\": \"LUC00000248255ETH\",\n  \"amount\": 163,\n  \"to\": \"+251942283485\",\n  \"fee\": 4.1,\n  \"status\": \"PROCESSED\",\n  \"statusdetail\": \"AIRTIME_TRANSFER\",\n  \"statuscomment\": {},\n  \"date\": \"2016-12-01T08:33:31Z\",\n  \"processdate\": \"2016-12-01T08:33:31Z\",\n  \"description\": \"Mekele Driving institute I283742143 december fee\",\n  \"settlementamount\": \"USD 10.34\",\n  \"toname\": \"Hiwot Tadesse\",\n  \"toaccount\": \"2346772:CUS\",\n  \"currency\": \"ETB\",\n  \"from\": \"2683473\",\n  \"fromname\": \"Abebe Tewodros Gulilat\",\n  \"fromaccount\": \"2346772:CUS\",\n  \"tracenumber\": \"5f0e8400-e29b-41d4-a716-49f65b446371\",\n  \"referenceid\": \"a\",\n  \"invoiceid\": \"WJO19STXS1GLJ04EO4SN6MHN0N9AIQ9Q\"\n },\n {\n  \"id\": \"LUC00000248255ETH\",\n  \"amount\": 163,\n  \"to\": \"+251942283485\",\n  \"fee\": 4.1,\n  \"status\": \"PROCESSED\",\n  \"statusdetail\": \"NEW_MEMBER_TRANSFER\",\n  \"statuscomment\": {},\n  \"date\": \"2016-12-01T08:33:31Z\",\n  \"processdate\": \"2016-12-01T08:33:31Z\",\n  \"description\": \"Mekele Driving institute I283742143 december fee\",\n  \"settlementamount\": \"USD 10.34\",\n  \"toname\": \"Hiwot Tadesse\",\n  \"toaccount\": \"2346772:CUS\",\n  \"currency\": \"ETB\",\n  \"from\": \"2683473\",\n  \"fromname\": \"Abebe Tewodros Gulilat\",\n  \"fromaccount\": \"2346772:CUS\",\n  \"tracenumber\": \"5f0e8400-e29b-41d4-a716-49f65b446371\",\n  \"referenceid\": \"es\",\n  \"invoiceid\": \"WJO19STXS1GLJ04EO4SN6MHN0N9AIQ9Q\"\n }\n]"
										}
									]
								},
								{
									"name": "Cancel a batch of transfers. Possible only when transfers are in INITIALIZING status.",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    \"<integer>\",\n    \"<integer>\"\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/transfers/batch/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transfers",
												"batch",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Batch ID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Request was successful",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    \"<integer>\",\n    \"<integer>\"\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/transfers/batch/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"transfers",
														"batch",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
										},
										{
											"name": "The parameters are incorrect, or the transfer count not be cancelled",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    \"<integer>\",\n    \"<integer>\"\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/transfers/batch/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"transfers",
														"batch",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
										}
									]
								}
							]
						},
						{
							"name": "Create a new transfer batch",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"batch\": \"<string>\",\n    \"transfers\": [\n        {\n            \"amount\": \"<double>\",\n            \"to\": \"<string>\",\n            \"description\": \"<string>\",\n            \"settlementamount\": \"<string>\",\n            \"currency\": \"<string>\",\n            \"tracenumber\": \"<string>\",\n            \"referenceid\": \"<string>\",\n            \"notifyfrom\": true,\n            \"notifyto\": true,\n            \"tofullname\": {},\n            \"toaddress\": {},\n            \"tobankcode\": {},\n            \"tobankaccount\": {},\n            \"tobankbranch\": {},\n            \"from\": {}\n        },\n        {\n            \"amount\": \"<double>\",\n            \"to\": \"<string>\",\n            \"description\": \"<string>\",\n            \"settlementamount\": \"<string>\",\n            \"currency\": \"<string>\",\n            \"tracenumber\": \"<string>\",\n            \"referenceid\": \"<string>\",\n            \"notifyfrom\": true,\n            \"notifyto\": true,\n            \"tofullname\": {},\n            \"toaddress\": {},\n            \"tobankcode\": {},\n            \"tobankaccount\": {},\n            \"tobankbranch\": {},\n            \"from\": {}\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/transfers/batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfers",
										"batch"
									]
								},
								"description": "Create a new transfer batch with one or more transfers. A batch is a list of transfers, with one identifier. All transfers of the batch will be attempted.\nIf a transfer in the list is unsuccessful, the batch will be aborted at that point. Earlier transfers in the same batch will have been completed.\n"
							},
							"response": [
								{
									"name": "Request accepted for processing",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"batch\": \"Batch 24-04-2017/2\",\n    \"transfers\": [\n        {\n            \"amount\": 245.34,\n            \"to\": \"+251997289566\",\n            \"description\": \"Fintubo tubing order X627438\",\n            \"settlementamount\": \"USD 46.24\",\n            \"currency\": \"ETB\",\n            \"tracenumber\": \"49d968b9-58ae-49d7-848b-94e4dc1f6456\",\n            \"referenceid\": \"<string>\",\n            \"notifyfrom\": true,\n            \"notifyto\": true,\n            \"tofullname\": {},\n            \"toaddress\": {},\n            \"tobankcode\": {},\n            \"tobankaccount\": {},\n            \"tobankbranch\": {},\n            \"from\": {}\n        },\n        {\n            \"amount\": 245.34,\n            \"to\": \"+251997289566\",\n            \"description\": \"Fintubo tubing order X627438\",\n            \"settlementamount\": \"USD 46.24\",\n            \"currency\": \"ETB\",\n            \"tracenumber\": \"49d968b9-58ae-49d7-848b-94e4dc1f6456\",\n            \"referenceid\": \"<string>\",\n            \"notifyfrom\": true,\n            \"notifyto\": true,\n            \"tofullname\": {},\n            \"toaddress\": {},\n            \"tobankcode\": {},\n            \"tobankaccount\": {},\n            \"tobankbranch\": {},\n            \"from\": {}\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/transfers/batch",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transfers",
												"batch"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": \"LUC00000248255ETH\",\n  \"amount\": 163,\n  \"to\": \"+251942283485\",\n  \"fee\": 4.1,\n  \"status\": \"PROCESSED\",\n  \"statusdetail\": \"AIRTIME_TRANSFER\",\n  \"statuscomment\": {},\n  \"date\": \"2016-12-01T08:33:31Z\",\n  \"processdate\": \"2016-12-01T08:33:31Z\",\n  \"description\": \"Mekele Driving institute I283742143 december fee\",\n  \"settlementamount\": \"USD 10.34\",\n  \"toname\": \"Hiwot Tadesse\",\n  \"toaccount\": \"2346772:CUS\",\n  \"currency\": \"ETB\",\n  \"from\": \"2683473\",\n  \"fromname\": \"Abebe Tewodros Gulilat\",\n  \"fromaccount\": \"2346772:CUS\",\n  \"tracenumber\": \"5f0e8400-e29b-41d4-a716-49f65b446371\",\n  \"referenceid\": \"a\",\n  \"invoiceid\": \"WJO19STXS1GLJ04EO4SN6MHN0N9AIQ9Q\"\n },\n {\n  \"id\": \"LUC00000248255ETH\",\n  \"amount\": 163,\n  \"to\": \"+251942283485\",\n  \"fee\": 4.1,\n  \"status\": \"PROCESSED\",\n  \"statusdetail\": \"NEW_MEMBER_TRANSFER\",\n  \"statuscomment\": {},\n  \"date\": \"2016-12-01T08:33:31Z\",\n  \"processdate\": \"2016-12-01T08:33:31Z\",\n  \"description\": \"Mekele Driving institute I283742143 december fee\",\n  \"settlementamount\": \"USD 10.34\",\n  \"toname\": \"Hiwot Tadesse\",\n  \"toaccount\": \"2346772:CUS\",\n  \"currency\": \"ETB\",\n  \"from\": \"2683473\",\n  \"fromname\": \"Abebe Tewodros Gulilat\",\n  \"fromaccount\": \"2346772:CUS\",\n  \"tracenumber\": \"5f0e8400-e29b-41d4-a716-49f65b446371\",\n  \"referenceid\": \"es\",\n  \"invoiceid\": \"WJO19STXS1GLJ04EO4SN6MHN0N9AIQ9Q\"\n }\n]"
								},
								{
									"name": "The parameters are incorrect, or (one of) the transfers in the list failed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"batch\": \"Batch 24-04-2017/2\",\n    \"transfers\": [\n        {\n            \"amount\": 245.34,\n            \"to\": \"+251997289566\",\n            \"description\": \"Fintubo tubing order X627438\",\n            \"settlementamount\": \"USD 46.24\",\n            \"currency\": \"ETB\",\n            \"tracenumber\": \"49d968b9-58ae-49d7-848b-94e4dc1f6456\",\n            \"referenceid\": \"<string>\",\n            \"notifyfrom\": true,\n            \"notifyto\": true,\n            \"tofullname\": {},\n            \"toaddress\": {},\n            \"tobankcode\": {},\n            \"tobankaccount\": {},\n            \"tobankbranch\": {},\n            \"from\": {}\n        },\n        {\n            \"amount\": 245.34,\n            \"to\": \"+251997289566\",\n            \"description\": \"Fintubo tubing order X627438\",\n            \"settlementamount\": \"USD 46.24\",\n            \"currency\": \"ETB\",\n            \"tracenumber\": \"49d968b9-58ae-49d7-848b-94e4dc1f6456\",\n            \"referenceid\": \"<string>\",\n            \"notifyfrom\": true,\n            \"notifyto\": true,\n            \"tofullname\": {},\n            \"toaddress\": {},\n            \"tobankcode\": {},\n            \"tobankaccount\": {},\n            \"tobankbranch\": {},\n            \"from\": {}\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/transfers/batch",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transfers",
												"batch"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
								}
							]
						},
						{
							"name": "Search batch",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/transfers/batch?offset=0&limit=10&status=PREPARED,PENDING,CANCELED,DENIED,EXPIRED,PROCESSED,FAILED&startdate=<dateTime>&enddate=<dateTime>&descending=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfers",
										"batch"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "offset, must be multiple of limit"
										},
										{
											"key": "limit",
											"value": "10",
											"description": "limit number of returned results"
										},
										{
											"key": "status",
											"value": "PREPARED,PENDING,CANCELED,DENIED,EXPIRED,PROCESSED,FAILED",
											"description": "Limit results to one or more comma separated of the possible transfer states. NOTE: if not specified, transfers in all states are shown.\n"
										},
										{
											"key": "startdate",
											"value": "<dateTime>",
											"description": "Limit returned results from and including RFC3339 start date. Results with the second of the startdate are included. Fractional seconds are ignored."
										},
										{
											"key": "enddate",
											"value": "<dateTime>",
											"description": "Limit returned results upto and including RFC3339 end date. Results within the second of the enddate are included. Fractional seconds are ignored."
										},
										{
											"key": "descending",
											"value": "false",
											"description": "Order results ascending or descending by date."
										}
									]
								},
								"description": "Search the batch history.\n"
							},
							"response": [
								{
									"name": "Request was successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transfers/batch?offset=0&limit=10&status=PREPARED,PENDING,CANCELED,DENIED,EXPIRED,PROCESSED,FAILED&startdate=<dateTime>&enddate=<dateTime>&descending=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transfers",
												"batch"
											],
											"query": [
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "status",
													"value": "PREPARED,PENDING,CANCELED,DENIED,EXPIRED,PROCESSED,FAILED"
												},
												{
													"key": "startdate",
													"value": "<dateTime>"
												},
												{
													"key": "enddate",
													"value": "<dateTime>"
												},
												{
													"key": "descending",
													"value": "false"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": \"LUC00000248255ETH\",\n  \"amount\": 163,\n  \"to\": \"+251942283485\",\n  \"fee\": 4.1,\n  \"status\": \"PROCESSED\",\n  \"statusdetail\": \"AIRTIME_TRANSFER\",\n  \"statuscomment\": {},\n  \"date\": \"2016-12-01T08:33:31Z\",\n  \"processdate\": \"2016-12-01T08:33:31Z\",\n  \"description\": \"Mekele Driving institute I283742143 december fee\",\n  \"settlementamount\": \"USD 10.34\",\n  \"toname\": \"Hiwot Tadesse\",\n  \"toaccount\": \"2346772:CUS\",\n  \"currency\": \"ETB\",\n  \"from\": \"2683473\",\n  \"fromname\": \"Abebe Tewodros Gulilat\",\n  \"fromaccount\": \"2346772:CUS\",\n  \"tracenumber\": \"5f0e8400-e29b-41d4-a716-49f65b446371\",\n  \"referenceid\": \"a\",\n  \"invoiceid\": \"WJO19STXS1GLJ04EO4SN6MHN0N9AIQ9Q\"\n },\n {\n  \"id\": \"LUC00000248255ETH\",\n  \"amount\": 163,\n  \"to\": \"+251942283485\",\n  \"fee\": 4.1,\n  \"status\": \"PROCESSED\",\n  \"statusdetail\": \"NEW_MEMBER_TRANSFER\",\n  \"statuscomment\": {},\n  \"date\": \"2016-12-01T08:33:31Z\",\n  \"processdate\": \"2016-12-01T08:33:31Z\",\n  \"description\": \"Mekele Driving institute I283742143 december fee\",\n  \"settlementamount\": \"USD 10.34\",\n  \"toname\": \"Hiwot Tadesse\",\n  \"toaccount\": \"2346772:CUS\",\n  \"currency\": \"ETB\",\n  \"from\": \"2683473\",\n  \"fromname\": \"Abebe Tewodros Gulilat\",\n  \"fromaccount\": \"2346772:CUS\",\n  \"tracenumber\": \"5f0e8400-e29b-41d4-a716-49f65b446371\",\n  \"referenceid\": \"es\",\n  \"invoiceid\": \"WJO19STXS1GLJ04EO4SN6MHN0N9AIQ9Q\"\n }\n]"
								},
								{
									"name": "The parameters are incorrect, or the transfer failed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transfers/batch?offset=0&limit=10&status=PREPARED,PENDING,CANCELED,DENIED,EXPIRED,PROCESSED,FAILED&startdate=<dateTime>&enddate=<dateTime>&descending=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transfers",
												"batch"
											],
											"query": [
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "status",
													"value": "PREPARED,PENDING,CANCELED,DENIED,EXPIRED,PROCESSED,FAILED"
												},
												{
													"key": "startdate",
													"value": "<dateTime>"
												},
												{
													"key": "enddate",
													"value": "<dateTime>"
												},
												{
													"key": "descending",
													"value": "false"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
								}
							]
						}
					]
				},
				{
					"name": "{id}",
					"item": [
						{
							"name": "Find a transfer by id.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/transfers/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfers",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Transfer id"
										}
									]
								}
							},
							"response": [
								{
									"name": "The transfer details requested",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transfers/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transfers",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"LUC00000248255ETH\",\n \"amount\": 163,\n \"to\": \"+251942283485\",\n \"fee\": 4.1,\n \"status\": \"PROCESSED\",\n \"statusdetail\": \"NEW_MEMBER_TRANSFER\",\n \"statuscomment\": {},\n \"date\": \"2016-12-01T08:33:31Z\",\n \"processdate\": \"2016-12-01T08:33:31Z\",\n \"description\": \"Mekele Driving institute I283742143 december fee\",\n \"settlementamount\": \"USD 10.34\",\n \"toname\": \"Hiwot Tadesse\",\n \"toaccount\": \"2346772:CUS\",\n \"currency\": \"ETB\",\n \"from\": \"2683473\",\n \"fromname\": \"Abebe Tewodros Gulilat\",\n \"fromaccount\": \"2346772:CUS\",\n \"tracenumber\": \"5f0e8400-e29b-41d4-a716-49f65b446371\",\n \"referenceid\": \"r\",\n \"invoiceid\": \"WJO19STXS1GLJ04EO4SN6MHN0N9AIQ9Q\"\n}"
								},
								{
									"name": "The parameters are incorrect, or transfer could not be found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transfers/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transfers",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
								}
							]
						},
						{
							"name": "Authorize a PREPARED or RECEIVED transfer",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"comment\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/transfers/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfers",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Transfer id"
										}
									]
								},
								"description": "This endpoint is avaiable only when a connection token is used with \"Authorative\" set to true.\nMoves the status of a transfer from a PREPARED status to its next state, or from a RECEIVED status to its next status. \nThe next status is usually PROCESSED but may also be RECEIVED or PENDING status waiting for further\nprocessing or authorization from other parties.\n"
							},
							"response": [
								{
									"name": "The parameters are incorrect, or transfer could not be found, or permission was denied",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transfers/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transfers",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
								},
								{
									"name": "The transfer was authorized",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transfers/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transfers",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"LUC00000248255ETH\",\n \"amount\": 163,\n \"to\": \"+251942283485\",\n \"fee\": 4.1,\n \"status\": \"PROCESSED\",\n \"statusdetail\": \"NEW_MEMBER_TRANSFER\",\n \"statuscomment\": {},\n \"date\": \"2016-12-01T08:33:31Z\",\n \"processdate\": \"2016-12-01T08:33:31Z\",\n \"description\": \"Mekele Driving institute I283742143 december fee\",\n \"settlementamount\": \"USD 10.34\",\n \"toname\": \"Hiwot Tadesse\",\n \"toaccount\": \"2346772:CUS\",\n \"currency\": \"ETB\",\n \"from\": \"2683473\",\n \"fromname\": \"Abebe Tewodros Gulilat\",\n \"fromaccount\": \"2346772:CUS\",\n \"tracenumber\": \"5f0e8400-e29b-41d4-a716-49f65b446371\",\n \"referenceid\": \"r\",\n \"invoiceid\": \"WJO19STXS1GLJ04EO4SN6MHN0N9AIQ9Q\"\n}"
								}
							]
						},
						{
							"name": "Cancel a PREPARED, RECEIVED or PENDING transfer",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"comment\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/transfers/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfers",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Transfer id"
										}
									]
								},
								"description": "Change the status of a transfer from a PREPARED, RECEIVED or PENDING status to CANCELLED status, if allowed.\n"
							},
							"response": [
								{
									"name": "The transfer was canceled",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transfers/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transfers",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"LUC00000248255ETH\",\n \"amount\": 163,\n \"to\": \"+251942283485\",\n \"fee\": 4.1,\n \"status\": \"PROCESSED\",\n \"statusdetail\": \"NEW_MEMBER_TRANSFER\",\n \"statuscomment\": {},\n \"date\": \"2016-12-01T08:33:31Z\",\n \"processdate\": \"2016-12-01T08:33:31Z\",\n \"description\": \"Mekele Driving institute I283742143 december fee\",\n \"settlementamount\": \"USD 10.34\",\n \"toname\": \"Hiwot Tadesse\",\n \"toaccount\": \"2346772:CUS\",\n \"currency\": \"ETB\",\n \"from\": \"2683473\",\n \"fromname\": \"Abebe Tewodros Gulilat\",\n \"fromaccount\": \"2346772:CUS\",\n \"tracenumber\": \"5f0e8400-e29b-41d4-a716-49f65b446371\",\n \"referenceid\": \"r\",\n \"invoiceid\": \"WJO19STXS1GLJ04EO4SN6MHN0N9AIQ9Q\"\n}"
								},
								{
									"name": "The parameters are incorrect, or transfer could not be found, or permission was denied",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transfers/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transfers",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
								}
							]
						},
						{
							"name": "Replace a transfer",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"amount\": \"<double>\",\n    \"to\": \"<string>\",\n    \"description\": \"<string>\",\n    \"settlementamount\": \"<string>\",\n    \"currency\": \"<string>\",\n    \"tracenumber\": \"<string>\",\n    \"referenceid\": \"<string>\",\n    \"notifyfrom\": true,\n    \"notifyto\": true,\n    \"tofullname\": {},\n    \"toaddress\": {},\n    \"tobankcode\": {},\n    \"tobankaccount\": {},\n    \"tobankbranch\": {},\n    \"from\": {}\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/transfers/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfers",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Transfer id"
										}
									]
								},
								"description": "This endpoint is avaiable only when a connection token is used with \"Authorative\" set to true.\nThis endpoint allows replacing an earlier transfer by a new transfer, with the same referenceid.\nReplacing a transfer is only possible if the state is not PROCESSED or RECEIVED, and if a referenceid is supplied.\nAfter replacement, the previous transfer will be moved to state REPLACED, and the new transfer started\nusing rules described above. The response will contain the new transferid and new transfer status.\n\nIt is important to note that there is no guarantee that the transfer can be replaced.\nThe original transfer will ALWAYS be denied (if it was not already denied or canceled) by this endpoint, even if the new replacement transfer cannot be completed.\nIf the to account is blocked or suspended, or the sender has insufficient funds, or other issues, the original transfer\nwill be DENIED and no replacement transfer is created. The response will show the new transfer error.\n\nThe id of the transfer to be replaced must be supplied in the path, as well as the referenceid. \nThis combination assures a transfer replacement is idempotent, and can only be modified once.\nWhen the same transfer id is attempted to be replaced again an error TRANSFER_REPLACED will occur.\n\nA replacement transfer allows all aspects of the earlier transfer to be changed:\n- Replacing the intended benificiary (including change of fees applied)\n- Replacing the description\n- Changing the amount\n\nPlease note when using referenceid, even though it is a unique reference for PROCESSED, \nmultiple transfers may be returned when searching for a referenceid with REPLACED, CANCELED or DENIED state.\n"
							},
							"response": [
								{
									"name": "Request was successful",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transfers/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transfers",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"LUC00000248255ETH\",\n \"amount\": 163,\n \"to\": \"+251942283485\",\n \"fee\": 4.1,\n \"status\": \"PROCESSED\",\n \"statusdetail\": \"NEW_MEMBER_TRANSFER\",\n \"statuscomment\": {},\n \"date\": \"2016-12-01T08:33:31Z\",\n \"processdate\": \"2016-12-01T08:33:31Z\",\n \"description\": \"Mekele Driving institute I283742143 december fee\",\n \"settlementamount\": \"USD 10.34\",\n \"toname\": \"Hiwot Tadesse\",\n \"toaccount\": \"2346772:CUS\",\n \"currency\": \"ETB\",\n \"from\": \"2683473\",\n \"fromname\": \"Abebe Tewodros Gulilat\",\n \"fromaccount\": \"2346772:CUS\",\n \"tracenumber\": \"5f0e8400-e29b-41d4-a716-49f65b446371\",\n \"referenceid\": \"r\",\n \"invoiceid\": \"WJO19STXS1GLJ04EO4SN6MHN0N9AIQ9Q\"\n}"
								},
								{
									"name": "The parameters are incorrect, or the transfer failed",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transfers/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transfers",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
								}
							]
						}
					]
				},
				{
					"name": "Search for transfers to and from this account.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/transfers?offset=0&limit=10&status=PREPARED,PENDING,CANCELED,DENIED,EXPIRED,PROCESSED,FAILED&statusdetail=&tracenumber=<string>&referenceid=<string>&startdate=<dateTime>&enddate=<dateTime>&descending=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transfers"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "offset, must be multiple of limit"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "limit number of returned results"
								},
								{
									"key": "status",
									"value": "PREPARED,PENDING,CANCELED,DENIED,EXPIRED,PROCESSED,FAILED",
									"description": "Limit results to one or more comma separated of the possible transfer states. NOTE: if not specified, transfers in all states are shown.\n"
								},
								{
									"key": "statusdetail",
									"value": "",
									"description": "Limit results to one or more comma separated items of the possible status detail states\n"
								},
								{
									"key": "tracenumber",
									"value": "<string>",
									"description": "Limit results to the tracenumber supplied, as specified in the original transfer"
								},
								{
									"key": "referenceid",
									"value": "<string>",
									"description": "Limit results matching the start of the referenceid supplied, as specified in the original transfer"
								},
								{
									"key": "startdate",
									"value": "<dateTime>",
									"description": "Limit returned results from and including RFC3339 start date. Results with the second of the startdate are included. Fractional seconds are ignored."
								},
								{
									"key": "enddate",
									"value": "<dateTime>",
									"description": "Limit returned results upto and including RFC3339 end date. Results within the second of the enddate are included. Fractional seconds are ignored."
								},
								{
									"key": "descending",
									"value": "false",
									"description": "Order results ascending or descending by date."
								}
							]
						},
						"description": "This endpoint will return a list of transfers meeting the search parameters sent.\nTo get a list of most recent transfers, use descending set to true and limit the results.\nUsing the status field, it is possible to return only transfers in certain states.\n"
					},
					"response": [
						{
							"name": "Request was successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transfers?offset=0&limit=10&status=PREPARED,PENDING,CANCELED,DENIED,EXPIRED,PROCESSED,FAILED&statusdetail=&tracenumber=<string>&referenceid=<string>&startdate=<dateTime>&enddate=<dateTime>&descending=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfers"
									],
									"query": [
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "status",
											"value": "PREPARED,PENDING,CANCELED,DENIED,EXPIRED,PROCESSED,FAILED"
										},
										{
											"key": "statusdetail",
											"value": ""
										},
										{
											"key": "tracenumber",
											"value": "<string>"
										},
										{
											"key": "referenceid",
											"value": "<string>"
										},
										{
											"key": "startdate",
											"value": "<dateTime>"
										},
										{
											"key": "enddate",
											"value": "<dateTime>"
										},
										{
											"key": "descending",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"LUC00000248255ETH\",\n  \"amount\": 163,\n  \"to\": \"+251942283485\",\n  \"fee\": 4.1,\n  \"status\": \"PROCESSED\",\n  \"statusdetail\": \"AIRTIME_TRANSFER\",\n  \"statuscomment\": {},\n  \"date\": \"2016-12-01T08:33:31Z\",\n  \"processdate\": \"2016-12-01T08:33:31Z\",\n  \"description\": \"Mekele Driving institute I283742143 december fee\",\n  \"settlementamount\": \"USD 10.34\",\n  \"toname\": \"Hiwot Tadesse\",\n  \"toaccount\": \"2346772:CUS\",\n  \"currency\": \"ETB\",\n  \"from\": \"2683473\",\n  \"fromname\": \"Abebe Tewodros Gulilat\",\n  \"fromaccount\": \"2346772:CUS\",\n  \"tracenumber\": \"5f0e8400-e29b-41d4-a716-49f65b446371\",\n  \"referenceid\": \"a\",\n  \"invoiceid\": \"WJO19STXS1GLJ04EO4SN6MHN0N9AIQ9Q\"\n },\n {\n  \"id\": \"LUC00000248255ETH\",\n  \"amount\": 163,\n  \"to\": \"+251942283485\",\n  \"fee\": 4.1,\n  \"status\": \"PROCESSED\",\n  \"statusdetail\": \"NEW_MEMBER_TRANSFER\",\n  \"statuscomment\": {},\n  \"date\": \"2016-12-01T08:33:31Z\",\n  \"processdate\": \"2016-12-01T08:33:31Z\",\n  \"description\": \"Mekele Driving institute I283742143 december fee\",\n  \"settlementamount\": \"USD 10.34\",\n  \"toname\": \"Hiwot Tadesse\",\n  \"toaccount\": \"2346772:CUS\",\n  \"currency\": \"ETB\",\n  \"from\": \"2683473\",\n  \"fromname\": \"Abebe Tewodros Gulilat\",\n  \"fromaccount\": \"2346772:CUS\",\n  \"tracenumber\": \"5f0e8400-e29b-41d4-a716-49f65b446371\",\n  \"referenceid\": \"es\",\n  \"invoiceid\": \"WJO19STXS1GLJ04EO4SN6MHN0N9AIQ9Q\"\n }\n]"
						},
						{
							"name": "The parameters are incorrect, or the transfer could not be made",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transfers?offset=0&limit=10&status=PREPARED,PENDING,CANCELED,DENIED,EXPIRED,PROCESSED,FAILED&statusdetail=&tracenumber=<string>&referenceid=<string>&startdate=<dateTime>&enddate=<dateTime>&descending=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfers"
									],
									"query": [
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "status",
											"value": "PREPARED,PENDING,CANCELED,DENIED,EXPIRED,PROCESSED,FAILED"
										},
										{
											"key": "statusdetail",
											"value": ""
										},
										{
											"key": "tracenumber",
											"value": "<string>"
										},
										{
											"key": "referenceid",
											"value": "<string>"
										},
										{
											"key": "startdate",
											"value": "<dateTime>"
										},
										{
											"key": "enddate",
											"value": "<dateTime>"
										},
										{
											"key": "descending",
											"value": "false"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
						}
					]
				},
				{
					"name": "Create a new transfer to a HelloCash user, new member or special destination.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": 30,\n    \"to\": \"+251911153969\",\n    \"description\": \"pay 30\",\n    \"currency\": \"ETB\",\n    \"tracenumber\": \"08d40a74-b287-4a19-bcf7-14440a5ad12a\",\n    \"referenceid\": \"91d3dc41-4b14-43cd-97fd-bea3893a4d79\",\n    \"notifyfrom\": true,\n    \"notifyto\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/transfers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transfers"
							]
						},
						"description": "To send money to a destination use this endpoint. To make a transfer make sure you have\na valid bearer token from the /authenticate endpoint. The to field contains the destination \nof the transfer within the HelloCash system. The to field supports a few different formats \nto identify the destination of the transfer. Most commonly the to field contains the destination \nmobile phone number in international format with leading +251 ethiopian country code.\n\nEach transfer can have a end-to-end reference_id or tracenumber, see the description above for usage.\n\nThere are a few special to field values allowed for transfers:\no hctocbs\n  If the to field is set to \"hctocbs\" then a direct transfer from a HelloCash wallet to any valid\n  bank account on the partner bank is possible.\n  The description of the transfer should contain at minimum the full bankaccount number, bank branch, \n  full name of the intended benificiary. The information will be checked before transfer is completed.\no cashpickup\n  If the to field is set to a user of the \"cashpickup\" group, then a direct transfer from a HelloCash wallet to a cash pickup at\n  any HelloCash agent or teller is started.\n  A cash pickup transfer always requires the final destination to identity themselves with a valid\n  proof of identity at the agent or teller. The description of the transfer must include at minimum the \n  full name and address of the final destination. This full name and address will be checked against a\n  proof of identification presented to the agent or teller.   \n"
					},
					"response": [
						{
							"name": "The parameters are incorrect, or the transfer failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transfers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfers"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
						},
						{
							"name": "Request was successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transfers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"LUC00000248255ETH\",\n \"amount\": 163,\n \"to\": \"+251942283485\",\n \"fee\": 4.1,\n \"status\": \"PROCESSED\",\n \"statusdetail\": \"NEW_MEMBER_TRANSFER\",\n \"statuscomment\": {},\n \"date\": \"2016-12-01T08:33:31Z\",\n \"processdate\": \"2016-12-01T08:33:31Z\",\n \"description\": \"Mekele Driving institute I283742143 december fee\",\n \"settlementamount\": \"USD 10.34\",\n \"toname\": \"Hiwot Tadesse\",\n \"toaccount\": \"2346772:CUS\",\n \"currency\": \"ETB\",\n \"from\": \"2683473\",\n \"fromname\": \"Abebe Tewodros Gulilat\",\n \"fromaccount\": \"2346772:CUS\",\n \"tracenumber\": \"5f0e8400-e29b-41d4-a716-49f65b446371\",\n \"referenceid\": \"r\",\n \"invoiceid\": \"WJO19STXS1GLJ04EO4SN6MHN0N9AIQ9Q\"\n}"
						}
					]
				},
				{
					"name": "Validate a transfer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": \"<double>\",\n    \"to\": \"<string>\",\n    \"description\": \"<string>\",\n    \"settlementamount\": \"<string>\",\n    \"currency\": \"<string>\",\n    \"tracenumber\": \"<string>\",\n    \"referenceid\": \"<string>\",\n    \"notifyfrom\": true,\n    \"notifyto\": true,\n    \"tofullname\": {},\n    \"toaddress\": {},\n    \"tobankcode\": {},\n    \"tobankaccount\": {},\n    \"tobankbranch\": {},\n    \"from\": {}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/transfers/validate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transfers",
								"validate"
							]
						},
						"description": "Validate if a transfer can be made, without actually performing the transfer. This endpoint checks if the passed parameters can be accepted.\nThis endpoint can be used to ensure the from phone number, is a known HelloCash member by checking the statusdetail.\n"
					},
					"response": [
						{
							"name": "Request was successful, transfer would succeed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"amount\": 245.34,\n    \"to\": \"+251997289566\",\n    \"description\": \"Fintubo tubing order X627438\",\n    \"settlementamount\": \"USD 46.24\",\n    \"currency\": \"ETB\",\n    \"tracenumber\": \"49d968b9-58ae-49d7-848b-94e4dc1f6456\",\n    \"referenceid\": \"<string>\",\n    \"notifyfrom\": true,\n    \"notifyto\": true,\n    \"tofullname\": {},\n    \"toaddress\": {},\n    \"tobankcode\": {},\n    \"tobankaccount\": {},\n    \"tobankbranch\": {},\n    \"from\": {}\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/transfers/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfers",
										"validate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"LUC00000248255ETH\",\n \"amount\": 163,\n \"to\": \"+251942283485\",\n \"fee\": 4.1,\n \"status\": \"PROCESSED\",\n \"statusdetail\": \"NEW_MEMBER_TRANSFER\",\n \"statuscomment\": {},\n \"date\": \"2016-12-01T08:33:31Z\",\n \"processdate\": \"2016-12-01T08:33:31Z\",\n \"description\": \"Mekele Driving institute I283742143 december fee\",\n \"settlementamount\": \"USD 10.34\",\n \"toname\": \"Hiwot Tadesse\",\n \"toaccount\": \"2346772:CUS\",\n \"currency\": \"ETB\",\n \"from\": \"2683473\",\n \"fromname\": \"Abebe Tewodros Gulilat\",\n \"fromaccount\": \"2346772:CUS\",\n \"tracenumber\": \"5f0e8400-e29b-41d4-a716-49f65b446371\",\n \"referenceid\": \"r\",\n \"invoiceid\": \"WJO19STXS1GLJ04EO4SN6MHN0N9AIQ9Q\"\n}"
						},
						{
							"name": "The parameters are incorrect, or transfer would fail",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"amount\": 245.34,\n    \"to\": \"+251997289566\",\n    \"description\": \"Fintubo tubing order X627438\",\n    \"settlementamount\": \"USD 46.24\",\n    \"currency\": \"ETB\",\n    \"tracenumber\": \"49d968b9-58ae-49d7-848b-94e4dc1f6456\",\n    \"referenceid\": \"<string>\",\n    \"notifyfrom\": true,\n    \"notifyto\": true,\n    \"tofullname\": {},\n    \"toaddress\": {},\n    \"tobankcode\": {},\n    \"tobankaccount\": {},\n    \"tobankbranch\": {},\n    \"from\": {}\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/transfers/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfers",
										"validate"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
						}
					]
				}
			]
		},
		{
			"name": "authorize",
			"item": [
				{
					"name": "Select a collection of items for two-factor authorization",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"batchids\": [\n        {\n            \"batchid\": \"<string>\",\n            \"linenumbers\": [\n                \"<int32>\",\n                \"<int32>\"\n            ]\n        },\n        {\n            \"batchid\": \"<string>\",\n            \"linenumbers\": [\n                \"<int32>\",\n                \"<int32>\"\n            ]\n        }\n    ],\n    \"transferids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"invoiceids\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/authorize",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authorize"
							]
						},
						"description": "Select a collection of batches, batch line items, transfers and/or invoices for two-factor authorization in one go\nThe next time the user checks their HelloCash menu on IVR or USSD, they are shown\na prompt to review the transfers and enter their pincode to authorize the transfers.\nReturns a unique reference code for the selection, valid for 15 minutes.\n"
					},
					"response": [
						{
							"name": "The parameters are incorrect, or transfers could not be selected for authorization",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"batchids\": [\n        {\n            \"batchid\": \"<string>\",\n            \"linenumbers\": [\n                \"<int32>\",\n                \"<int32>\"\n            ]\n        },\n        {\n            \"batchid\": \"<string>\",\n            \"linenumbers\": [\n                \"<int32>\",\n                \"<int32>\"\n            ]\n        }\n    ],\n    \"transferids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"invoiceids\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/authorize",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorize"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
						},
						{
							"name": "Request was successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"batchids\": [\n        {\n            \"batchid\": \"<string>\",\n            \"linenumbers\": [\n                \"<int32>\",\n                \"<int32>\"\n            ]\n        },\n        {\n            \"batchid\": \"<string>\",\n            \"linenumbers\": [\n                \"<int32>\",\n                \"<int32>\"\n            ]\n        }\n    ],\n    \"transferids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"invoiceids\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/authorize",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorize"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
						}
					]
				},
				{
					"name": "Cancel a collection of transfers",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"batchids\": [\n        {\n            \"batchid\": \"<string>\",\n            \"linenumbers\": [\n                \"<int32>\",\n                \"<int32>\"\n            ]\n        },\n        {\n            \"batchid\": \"<string>\",\n            \"linenumbers\": [\n                \"<int32>\",\n                \"<int32>\"\n            ]\n        }\n    ],\n    \"transferids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"invoiceids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"comment\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/authorize",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authorize"
							]
						},
						"description": "Cancel a collection of batches, batch line items, transfers and/or invoices. Only possible if the items are still in \nPENDING, PAYER, RECEIVED or INITIALIZING status.\n"
					},
					"response": [
						{
							"name": "Request was successful",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"batchids\": [\n        {\n            \"batchid\": \"<string>\",\n            \"linenumbers\": [\n                \"<int32>\",\n                \"<int32>\"\n            ]\n        },\n        {\n            \"batchid\": \"<string>\",\n            \"linenumbers\": [\n                \"<int32>\",\n                \"<int32>\"\n            ]\n        }\n    ],\n    \"transferids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"invoiceids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"comment\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/authorize",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorize"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
						},
						{
							"name": "The parameters are incorrect, or transfers could not be selected for authorization",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"batchids\": [\n        {\n            \"batchid\": \"<string>\",\n            \"linenumbers\": [\n                \"<int32>\",\n                \"<int32>\"\n            ]\n        },\n        {\n            \"batchid\": \"<string>\",\n            \"linenumbers\": [\n                \"<int32>\",\n                \"<int32>\"\n            ]\n        }\n    ],\n    \"transferids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"invoiceids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"comment\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/authorize",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorize"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
						}
					]
				}
			]
		},
		{
			"name": "invoices",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get the status of a invoice code.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/invoices/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"invoices",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The invoice shortcode, longcode or unique invoice code"
										}
									]
								},
								"description": "Shortcodes, longcodes and unique invoice codes can be used. \nPlease note that once an invoice is expired,\nit will be cleaned up after a short while. When a known invoice code is tried again later after cleanup\nit will not be found anymore and result in an empty response.\nThe GET /invoices endpoint does not have this restriction.\n"
							},
							"response": [
								{
									"name": "invoice code not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/invoices/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"invoices",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The parameters are incorrect",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/invoices/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"invoices",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
								},
								{
									"name": "The Invoice details and status",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/invoices/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"invoices",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"amount\": 23.6,\n \"description\": \"<string>\",\n \"from\": \"2489566\",\n \"currency\": \"<string>\",\n \"tracenumber\": \"cff1b106-028d-4433-8c4f-70423487a238\",\n \"notifyfrom\": true,\n \"notifyto\": true,\n \"expires\": \"2017-01-15T15:34:23Z\"\n}"
								}
							]
						},
						{
							"name": "Remove an invoice",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/invoices/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"invoices",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The invoice shortcode, longcode or unique invoice code"
										}
									]
								},
								"description": "Remove an invoice with shortcode or longcode.\nPossible only when the invoice is not processed yet.\nOnly the creator of the invoice can remove it.\n"
							},
							"response": [
								{
									"name": "The invoice details and status",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/invoices/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"invoices",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"amount\": 23.6,\n \"description\": \"<string>\",\n \"from\": \"2489566\",\n \"currency\": \"<string>\",\n \"tracenumber\": \"cff1b106-028d-4433-8c4f-70423487a238\",\n \"notifyfrom\": true,\n \"notifyto\": true,\n \"expires\": \"2017-01-15T15:34:23Z\"\n}"
								},
								{
									"name": "The parameters are incorrect",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/invoices/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"invoices",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
								},
								{
									"name": "invoice code not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/invoices/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"invoices",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Remove an invoice",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/invoices/:id/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"invoices",
										":id",
										"cancel"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The invoice shortcode, longcode or unique invoice code"
										}
									]
								},
								"description": "Deprecated, use DELETE /invoices/:id instead.\nRemove an invoice with shortcode or longcode.\nPossible only when the invoice is not processed yet.\nOnly the creator of the invoice can remove it.\n"
							},
							"response": [
								{
									"name": "invoice code not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/invoices/:id/cancel",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"invoices",
												":id",
												"cancel"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The parameters are incorrect",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/invoices/:id/cancel",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"invoices",
												":id",
												"cancel"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
								},
								{
									"name": "The invoice details and status",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/invoices/:id/cancel",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"invoices",
												":id",
												"cancel"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"amount\": 23.6,\n \"description\": \"<string>\",\n \"from\": \"2489566\",\n \"currency\": \"<string>\",\n \"tracenumber\": \"cff1b106-028d-4433-8c4f-70423487a238\",\n \"notifyfrom\": true,\n \"notifyto\": true,\n \"expires\": \"2017-01-15T15:34:23Z\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Create an invoice",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": \"<double>\",\n    \"description\": \"<string>\",\n    \"from\": \"<string>\",\n    \"currency\": \"<string>\",\n    \"tracenumber\": \"<string>\",\n    \"notifyfrom\": true,\n    \"notifyto\": true,\n    \"expires\": \"<dateTime>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/invoices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"invoices"
							]
						},
						"description": "Creates an invoice, for paying by any HelloCash member, or from a non-member through a HelloCash agent/teller.\nThe invoice may be payed directly from any member's HelloCash accont, or at any HelloCash agent or HelloCash partner bank branch.\nThis endpoint is intended to address several usecases\n  - Direct short-term invoice to a known payer's phone number, payable within a short time (max 1 hour)\n  - Direct short-term invoice without knowing payer's phone number, payable using the Invoice code which must be shown to payer. (webshops)\n  - Direct long-term invoice to a known payer's phone, payable within 90 days\n  - Direct long-term invoice without knowing payer's phone number\nWhen using this endpoint with a known phone nubmer, the SMS that is sent contains the invoice code that must be used to pay at Agent/Teller.\nWhen using this endpoint without a known phone number, HelloCash has no way to contact the intended payer. The caller should ensure the invoice code\nis given or shown to the intended payer in some way - show it on screen, send it to intended payer by email or post or print it out.\n"
					},
					"response": [
						{
							"name": "The parameters are incorrect",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/invoices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"invoices"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
						},
						{
							"name": "Request for payment was sent successful. The request must be completed in the following 15 minutes.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/invoices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"invoices"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"amount\": 23.6,\n \"description\": \"<string>\",\n \"from\": \"2489566\",\n \"currency\": \"<string>\",\n \"tracenumber\": \"cff1b106-028d-4433-8c4f-70423487a238\",\n \"notifyfrom\": true,\n \"notifyto\": true,\n \"expires\": \"2017-01-15T15:34:23Z\"\n}"
						}
					]
				},
				{
					"name": "Get a list of invoices",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/invoices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"invoices"
							]
						},
						"description": "Searches for invoices maching the provided parameters. Also shows expired invoices.\nThe direction of the invoices to list can be specified. By default both incoming and outgoing invoices are returned.\n"
					},
					"response": [
						{
							"name": "Request was successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/invoices?offset=0&limit=10&status=PREPARED,PENDING,CANCELED,DENIED,EXPIRED,PROCESSED,FAILED&statusdetail=&tracenumber=<string>&startdate=<dateTime>&enddate=<dateTime>&descending=false&direction=CREDIT,DEBIT",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"invoices"
									],
									"query": [
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "status",
											"value": "PREPARED,PENDING,CANCELED,DENIED,EXPIRED,PROCESSED,FAILED"
										},
										{
											"key": "statusdetail",
											"value": ""
										},
										{
											"key": "tracenumber",
											"value": "<string>"
										},
										{
											"key": "startdate",
											"value": "<dateTime>"
										},
										{
											"key": "enddate",
											"value": "<dateTime>"
										},
										{
											"key": "descending",
											"value": "false"
										},
										{
											"key": "direction",
											"value": "CREDIT,DEBIT"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The parameters are incorrect",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/invoices?offset=0&limit=10&status=PREPARED,PENDING,CANCELED,DENIED,EXPIRED,PROCESSED,FAILED&statusdetail=&tracenumber=<string>&startdate=<dateTime>&enddate=<dateTime>&descending=false&direction=CREDIT,DEBIT",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"invoices"
									],
									"query": [
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "status",
											"value": "PREPARED,PENDING,CANCELED,DENIED,EXPIRED,PROCESSED,FAILED"
										},
										{
											"key": "statusdetail",
											"value": ""
										},
										{
											"key": "tracenumber",
											"value": "<string>"
										},
										{
											"key": "startdate",
											"value": "<dateTime>"
										},
										{
											"key": "enddate",
											"value": "<dateTime>"
										},
										{
											"key": "descending",
											"value": "false"
										},
										{
											"key": "direction",
											"value": "CREDIT,DEBIT"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
						}
					]
				},
				{
					"name": "Validate an invoice",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": \"<double>\",\n    \"description\": \"<string>\",\n    \"from\": \"<string>\",\n    \"currency\": \"<string>\",\n    \"tracenumber\": \"<string>\",\n    \"notifyfrom\": true,\n    \"notifyto\": true,\n    \"expires\": \"<dateTime>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/invoices/validate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"invoices",
								"validate"
							]
						},
						"description": "Validate a payment request from a HelloCash member, or from a non-member through a HelloCash agent/teller.\nThis endpoint checks if the parameters passed for an invoice are correct without creating the invoice.\nThis endpoint can be used to ensure the from phone number, is a known HelloCash member by checking the statusdetail.\n"
					},
					"response": [
						{
							"name": "Request for payment was sent successful. The request must be completed in the following 15 minutes.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/invoices/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"invoices",
										"validate"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"amount\": 23.6,\n \"description\": \"<string>\",\n \"from\": \"2489566\",\n \"currency\": \"<string>\",\n \"tracenumber\": \"cff1b106-028d-4433-8c4f-70423487a238\",\n \"notifyfrom\": true,\n \"notifyto\": true,\n \"expires\": \"2017-01-15T15:34:23Z\"\n}"
						},
						{
							"name": "The parameters are incorrect",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/invoices/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"invoices",
										"validate"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
						}
					]
				}
			]
		},
		{
			"name": "loans",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "loan find By Id Wrap",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/loans/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"loans",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The loan id"
										}
									]
								}
							},
							"response": [
								{
									"name": "The parameters are incorrect, or the transfer could not be made",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/loans/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"loans",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
								},
								{
									"name": "Request was successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/loans/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"loans",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"LUC0002347782ETH\",\n \"repayments\": [\n  {\n   \"id\": \"\",\n   \"date\": \"\",\n   \"expires\": \"\",\n   \"amount\": {},\n   \"repaidamount\": {},\n   \"transfers\": [\n    {\n     \"id\": \"incididunt officia eiusmod\",\n     \"status\": \"non Duis ipsum mollit\",\n     \"amount\": {}\n    },\n    {\n     \"id\": \"irure do exercitation sed\",\n     \"status\": \"ipsum laborum dolore Ut\",\n     \"amount\": {}\n    }\n   ]\n  },\n  {\n   \"id\": \"\",\n   \"date\": \"\",\n   \"expires\": \"\",\n   \"amount\": {},\n   \"repaidamount\": {},\n   \"transfers\": [\n    {\n     \"id\": \"eu\",\n     \"status\": \"irure aute dolor quis\",\n     \"amount\": {}\n    },\n    {\n     \"id\": \"eiu\",\n     \"status\": \"ut dolore commodo\",\n     \"amount\": {}\n    }\n   ]\n  }\n ],\n \"status\": \"CLOSED\",\n \"statusdetail\": \"qui dolore\"\n}"
								},
								{
									"name": "Loan not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/loans/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"loans",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create a new repayment transfer for the loan",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"amount\": \"<double>\",\n    \"description\": \"<string>\",\n    \"notifyfrom\": true,\n    \"notifyto\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/loans/:id/repayments/:repaymentid/transfers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"loans",
										":id",
										"repayments",
										":repaymentid",
										"transfers"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The loan id"
										},
										{
											"key": "repaymentid",
											"value": "<integer>",
											"description": "(Required) Which repayment id of this loan"
										}
									]
								}
							},
							"response": [
								{
									"name": "Loan not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 245.34,\n    \"description\": \"Fintubo tubing order X627438\",\n    \"notifyfrom\": true,\n    \"notifyto\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/loans/:id/repayments/:repaymentid/transfers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"loans",
												":id",
												"repayments",
												":repaymentid",
												"transfers"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "repaymentid"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The parameters are incorrect, or the transfer could not be made",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 245.34,\n    \"description\": \"Fintubo tubing order X627438\",\n    \"notifyfrom\": true,\n    \"notifyto\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/loans/:id/repayments/:repaymentid/transfers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"loans",
												":id",
												"repayments",
												":repaymentid",
												"transfers"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "repaymentid"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
								},
								{
									"name": "Transfer created successfully",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"amount\": 245.34,\n    \"description\": \"Fintubo tubing order X627438\",\n    \"notifyfrom\": true,\n    \"notifyto\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/loans/:id/repayments/:repaymentid/transfers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"loans",
												":id",
												"repayments",
												":repaymentid",
												"transfers"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "repaymentid"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"LUC00000248255ETH\",\n \"amount\": 163,\n \"to\": \"+251942283485\",\n \"fee\": 4.1,\n \"status\": \"PROCESSED\",\n \"statusdetail\": \"NEW_MEMBER_TRANSFER\",\n \"statuscomment\": {},\n \"date\": \"2016-12-01T08:33:31Z\",\n \"processdate\": \"2016-12-01T08:33:31Z\",\n \"description\": \"Mekele Driving institute I283742143 december fee\",\n \"settlementamount\": \"USD 10.34\",\n \"toname\": \"Hiwot Tadesse\",\n \"toaccount\": \"2346772:CUS\",\n \"currency\": \"ETB\",\n \"from\": \"2683473\",\n \"fromname\": \"Abebe Tewodros Gulilat\",\n \"fromaccount\": \"2346772:CUS\",\n \"tracenumber\": \"5f0e8400-e29b-41d4-a716-49f65b446371\",\n \"referenceid\": \"r\",\n \"invoiceid\": \"WJO19STXS1GLJ04EO4SN6MHN0N9AIQ9Q\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Search for loans to and from this account.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/loans?offset=0&limit=10&status=PREPARED,PENDING,CANCELED,DENIED,EXPIRED,PROCESSED,FAILED&startdate=<dateTime>&enddate=<dateTime>&descending=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"loans"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "offset, must be multiple of limit"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "limit number of returned results"
								},
								{
									"key": "status",
									"value": "PREPARED,PENDING,CANCELED,DENIED,EXPIRED,PROCESSED,FAILED",
									"description": "Limit results to one or more comma separated of the possible transfer states. NOTE: if not specified, transfers in all states are shown.\n"
								},
								{
									"key": "startdate",
									"value": "<dateTime>",
									"description": "Limit returned results from and including RFC3339 start date. Results with the second of the startdate are included. Fractional seconds are ignored."
								},
								{
									"key": "enddate",
									"value": "<dateTime>",
									"description": "Limit returned results upto and including RFC3339 end date. Results within the second of the enddate are included. Fractional seconds are ignored."
								},
								{
									"key": "descending",
									"value": "false",
									"description": "Order results ascending or descending by date."
								}
							]
						},
						"description": "This endpoint will return a list of loans meeting the search parameters sent.\nTo get a list of most recent loans, use descending set to true and limit the results.\nUsing the status field, it is possible to return only loans in certain states.\n"
					},
					"response": [
						{
							"name": "The parameters are incorrect",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/loans?offset=0&limit=10&status=PREPARED,PENDING,CANCELED,DENIED,EXPIRED,PROCESSED,FAILED&startdate=<dateTime>&enddate=<dateTime>&descending=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"loans"
									],
									"query": [
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "status",
											"value": "PREPARED,PENDING,CANCELED,DENIED,EXPIRED,PROCESSED,FAILED"
										},
										{
											"key": "startdate",
											"value": "<dateTime>"
										},
										{
											"key": "enddate",
											"value": "<dateTime>"
										},
										{
											"key": "descending",
											"value": "false"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
						},
						{
							"name": "Request was successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/loans?offset=0&limit=10&status=PREPARED,PENDING,CANCELED,DENIED,EXPIRED,PROCESSED,FAILED&startdate=<dateTime>&enddate=<dateTime>&descending=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"loans"
									],
									"query": [
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "status",
											"value": "PREPARED,PENDING,CANCELED,DENIED,EXPIRED,PROCESSED,FAILED"
										},
										{
											"key": "startdate",
											"value": "<dateTime>"
										},
										{
											"key": "enddate",
											"value": "<dateTime>"
										},
										{
											"key": "descending",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"LUC0002347782ETH\",\n  \"repayments\": [\n   {\n    \"id\": \"\",\n    \"date\": \"\",\n    \"expires\": \"\",\n    \"amount\": {},\n    \"repaidamount\": {},\n    \"transfers\": [\n     {\n      \"id\": \"pariatur culpa\",\n      \"status\": \"elit in minim\",\n      \"amount\": {}\n     },\n     {\n      \"id\": \"non magna consequat\",\n      \"status\": \"dolor incididunt\",\n      \"amount\": {}\n     }\n    ]\n   },\n   {\n    \"id\": \"\",\n    \"date\": \"\",\n    \"expires\": \"\",\n    \"amount\": {},\n    \"repaidamount\": {},\n    \"transfers\": [\n     {\n      \"id\": \"deserunt sunt ipsum commodo\",\n      \"status\": \"ut\",\n      \"amount\": {}\n     },\n     {\n      \"id\": \"voluptate magna\",\n      \"status\": \"et aliqua\",\n      \"amount\": {}\n     }\n    ]\n   }\n  ],\n  \"status\": \"CLOSED\",\n  \"statusdetail\": \"incididunt fugiat dolor dolore\"\n },\n {\n  \"id\": \"LUC0002347782ETH\",\n  \"repayments\": [\n   {\n    \"id\": \"\",\n    \"date\": \"\",\n    \"expires\": \"\",\n    \"amount\": {},\n    \"repaidamount\": {},\n    \"transfers\": [\n     {\n      \"id\": \"enim mollit tempor\",\n      \"status\": \"voluptate minim velit\",\n      \"amount\": {}\n     },\n     {\n      \"id\": \"est anim in laboris sunt\",\n      \"status\": \"sint qui ullamco\",\n      \"amount\": {}\n     }\n    ]\n   },\n   {\n    \"id\": \"\",\n    \"date\": \"\",\n    \"expires\": \"\",\n    \"amount\": {},\n    \"repaidamount\": {},\n    \"transfers\": [\n     {\n      \"id\": \"veniam\",\n      \"status\": \"labore Lorem culpa minim\",\n      \"amount\": {}\n     },\n     {\n      \"id\": \"occaecat reprehenderit\",\n      \"status\": \"aute ut\",\n      \"amount\": {}\n     }\n    ]\n   }\n  ],\n  \"status\": \"OPEN\",\n  \"statusdetail\": \"proident dolore\"\n }\n]"
						}
					]
				}
			]
		},
		{
			"name": "airtime",
			"item": [
				{
					"name": "Finds a list of airtime transfers to and from this account.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airtime?offset=0&limit=10&status=PREPARED,PENDING,CANCELED,DENIED,EXPIRED,PROCESSED,FAILED&statusdetail=&tracenumber=<string>&startdate=<dateTime>&enddate=<dateTime>&descending=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airtime"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "offset, must be multiple of limit"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "limit number of returned results"
								},
								{
									"key": "status",
									"value": "PREPARED,PENDING,CANCELED,DENIED,EXPIRED,PROCESSED,FAILED",
									"description": "Limit results to one or more comma separated of the possible transfer states. NOTE: if not specified, transfers in all states are shown.\n"
								},
								{
									"key": "statusdetail",
									"value": "",
									"description": "Limit results to one or more comma separated items of the possible status detail states\n"
								},
								{
									"key": "tracenumber",
									"value": "<string>",
									"description": "Limit results to the tracenumber supplied, as specified in the original transfer"
								},
								{
									"key": "startdate",
									"value": "<dateTime>",
									"description": "Limit returned results from and including RFC3339 start date. Results with the second of the startdate are included. Fractional seconds are ignored."
								},
								{
									"key": "enddate",
									"value": "<dateTime>",
									"description": "Limit returned results upto and including RFC3339 end date. Results within the second of the enddate are included. Fractional seconds are ignored."
								},
								{
									"key": "descending",
									"value": "false",
									"description": "Order results ascending or descending by date."
								}
							]
						}
					},
					"response": [
						{
							"name": "The parameters are incorrect, airtime topup could not be made",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/airtime?offset=0&limit=10&status=PREPARED,PENDING,CANCELED,DENIED,EXPIRED,PROCESSED,FAILED&statusdetail=&tracenumber=<string>&startdate=<dateTime>&enddate=<dateTime>&descending=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airtime"
									],
									"query": [
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "status",
											"value": "PREPARED,PENDING,CANCELED,DENIED,EXPIRED,PROCESSED,FAILED"
										},
										{
											"key": "statusdetail",
											"value": ""
										},
										{
											"key": "tracenumber",
											"value": "<string>"
										},
										{
											"key": "startdate",
											"value": "<dateTime>"
										},
										{
											"key": "enddate",
											"value": "<dateTime>"
										},
										{
											"key": "descending",
											"value": "false"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
						},
						{
							"name": "Request was successful, airtime topup in progress. Note a airtime in progress may still fail later and needs to be re-checked until the topup reaches a final state.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/airtime?offset=0&limit=10&status=PREPARED,PENDING,CANCELED,DENIED,EXPIRED,PROCESSED,FAILED&statusdetail=&tracenumber=<string>&startdate=<dateTime>&enddate=<dateTime>&descending=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airtime"
									],
									"query": [
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "status",
											"value": "PREPARED,PENDING,CANCELED,DENIED,EXPIRED,PROCESSED,FAILED"
										},
										{
											"key": "statusdetail",
											"value": ""
										},
										{
											"key": "tracenumber",
											"value": "<string>"
										},
										{
											"key": "startdate",
											"value": "<dateTime>"
										},
										{
											"key": "enddate",
											"value": "<dateTime>"
										},
										{
											"key": "descending",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"LUC00000248255ETH\",\n  \"amount\": 163,\n  \"to\": \"+251942283485\",\n  \"fee\": 4.1,\n  \"status\": \"PROCESSED\",\n  \"statusdetail\": \"AIRTIME_TRANSFER\",\n  \"statuscomment\": {},\n  \"date\": \"2016-12-01T08:33:31Z\",\n  \"processdate\": \"2016-12-01T08:33:31Z\",\n  \"description\": \"Mekele Driving institute I283742143 december fee\",\n  \"settlementamount\": \"USD 10.34\",\n  \"toname\": \"Hiwot Tadesse\",\n  \"toaccount\": \"2346772:CUS\",\n  \"currency\": \"ETB\",\n  \"from\": \"2683473\",\n  \"fromname\": \"Abebe Tewodros Gulilat\",\n  \"fromaccount\": \"2346772:CUS\",\n  \"tracenumber\": \"5f0e8400-e29b-41d4-a716-49f65b446371\",\n  \"referenceid\": \"a\",\n  \"invoiceid\": \"WJO19STXS1GLJ04EO4SN6MHN0N9AIQ9Q\"\n },\n {\n  \"id\": \"LUC00000248255ETH\",\n  \"amount\": 163,\n  \"to\": \"+251942283485\",\n  \"fee\": 4.1,\n  \"status\": \"PROCESSED\",\n  \"statusdetail\": \"NEW_MEMBER_TRANSFER\",\n  \"statuscomment\": {},\n  \"date\": \"2016-12-01T08:33:31Z\",\n  \"processdate\": \"2016-12-01T08:33:31Z\",\n  \"description\": \"Mekele Driving institute I283742143 december fee\",\n  \"settlementamount\": \"USD 10.34\",\n  \"toname\": \"Hiwot Tadesse\",\n  \"toaccount\": \"2346772:CUS\",\n  \"currency\": \"ETB\",\n  \"from\": \"2683473\",\n  \"fromname\": \"Abebe Tewodros Gulilat\",\n  \"fromaccount\": \"2346772:CUS\",\n  \"tracenumber\": \"5f0e8400-e29b-41d4-a716-49f65b446371\",\n  \"referenceid\": \"es\",\n  \"invoiceid\": \"WJO19STXS1GLJ04EO4SN6MHN0N9AIQ9Q\"\n }\n]"
						}
					]
				},
				{
					"name": "Create a new airtime transfer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": \"<double>\",\n    \"to\": \"<string>\",\n    \"description\": \"<string>\",\n    \"settlementamount\": \"<string>\",\n    \"type\": \"PHONE\",\n    \"currency\": \"<string>\",\n    \"fromname\": \"<string>\",\n    \"tracenumber\": \"<string>\",\n    \"notifyfrom\": true,\n    \"notifyto\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/airtime",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airtime"
							]
						},
						"description": "Create a new Airtime transfer. The Airtime transfer will be attempted and may have several possible states.\nAfter creation, the transfer is immediately in PENDING state.\nOnce in PENDING state, depending amount and system response times, the transfer may move to one of several states.\nAverage response times are around 10 seconds. In that time the transfer will move to PROCESSED state if all went well.\nIf the requested amount is out of stock, the transfer will move to DENIED state within several seconds.\n\nDue to network and Ethio Telecom system overload reliability issues inside Ethiopia, a non negligable low-single-digit percentage of transfers will not be completed in 15 seconds.\nThese are retried on Ethiopian side. Typically these cases are resolved in a matter of several minutes - but during night time, weekend or other longer term outages it may take several hours to detect the final state of an airtime update.\n\nIf the destination is incorrect, or is SIM-blocked, the transfer will move to DENIED state.\nIf the Ethiopian network is completely down or the Ethio Telco system is completely down, the transfer is immediately DENIED.\n"
					},
					"response": [
						{
							"name": "Request was successful, transfer status",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"amount\": 25,\n    \"to\": \"+251997289566\",\n    \"description\": \"Topup company ref code s89287294 25 Birr, USD 1.12\",\n    \"settlementamount\": \"USD 1.12\",\n    \"type\": \"PHONE\",\n    \"currency\": \"ETB\",\n    \"fromname\": \"Topup company\",\n    \"tracenumber\": \"51459aae-77dd-48ba-813c-fae23c0c1896\",\n    \"notifyfrom\": true,\n    \"notifyto\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/airtime",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airtime"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"LUC00000248255ETH\",\n \"amount\": 163,\n \"to\": \"+251942283485\",\n \"fee\": 4.1,\n \"status\": \"PROCESSED\",\n \"statusdetail\": \"NEW_MEMBER_TRANSFER\",\n \"statuscomment\": {},\n \"date\": \"2016-12-01T08:33:31Z\",\n \"processdate\": \"2016-12-01T08:33:31Z\",\n \"description\": \"Mekele Driving institute I283742143 december fee\",\n \"settlementamount\": \"USD 10.34\",\n \"toname\": \"Hiwot Tadesse\",\n \"toaccount\": \"2346772:CUS\",\n \"currency\": \"ETB\",\n \"from\": \"2683473\",\n \"fromname\": \"Abebe Tewodros Gulilat\",\n \"fromaccount\": \"2346772:CUS\",\n \"tracenumber\": \"5f0e8400-e29b-41d4-a716-49f65b446371\",\n \"referenceid\": \"r\",\n \"invoiceid\": \"WJO19STXS1GLJ04EO4SN6MHN0N9AIQ9Q\"\n}"
						},
						{
							"name": "The parameters are incorrect, transfer could not be started",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"amount\": 25,\n    \"to\": \"+251997289566\",\n    \"description\": \"Topup company ref code s89287294 25 Birr, USD 1.12\",\n    \"settlementamount\": \"USD 1.12\",\n    \"type\": \"PHONE\",\n    \"currency\": \"ETB\",\n    \"fromname\": \"Topup company\",\n    \"tracenumber\": \"51459aae-77dd-48ba-813c-fae23c0c1896\",\n    \"notifyfrom\": true,\n    \"notifyto\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/airtime",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airtime"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
						}
					]
				},
				{
					"name": "List available airtime topup amounts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airtime/available",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airtime",
								"available"
							]
						},
						"description": "Returns a list of amounts, which are currently available topup amounts in the system.\nThe HelloCash airtime system operates in two modes.\n- When in normal operation, all amounts between 5 and 3000 Birr are allowed.\n  In normal mode this endpoint will respond with [5,10,15,25,50,100,150,250,500,1000,1500,2000,3000]\n  However any other amounts between 5 and 3000 is also allowed in normal mode.\n- In fallback mode, only a list of amounts are possible which is indicated by this endpoint.\n  The possible values in fallback mode are a subset of [5,10,15,25,100,500]\nThe HelloCash system can switch between normal and fallback at any moment in time.\nThe presense of the value 1000 in the response can be used to detect if the airtime system is in normal or \nfallback mode.\n"
					},
					"response": [
						{
							"name": "Request was successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/airtime/available",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airtime",
										"available"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n \"est sint irure tempor\",\n \"eiusmod ea incididunt sit\"\n]"
						},
						{
							"name": "The parameters are incorrect, airtime status could not be made",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/airtime/available",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airtime",
										"available"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
						}
					]
				},
				{
					"name": "Validate if an airtime topup can be made.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": \"<double>\",\n    \"to\": \"<string>\",\n    \"description\": \"<string>\",\n    \"settlementamount\": \"<string>\",\n    \"type\": \"PHONE\",\n    \"currency\": \"<string>\",\n    \"fromname\": \"<string>\",\n    \"tracenumber\": \"<string>\",\n    \"notifyfrom\": true,\n    \"notifyto\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/airtime/validate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airtime",
								"validate"
							]
						}
					},
					"response": [
						{
							"name": "The parameters are incorrect, airtime cannot be done",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"amount\": 25,\n    \"to\": \"+251997289566\",\n    \"description\": \"Topup company ref code s89287294 25 Birr, USD 1.12\",\n    \"settlementamount\": \"USD 1.12\",\n    \"type\": \"PHONE\",\n    \"currency\": \"ETB\",\n    \"fromname\": \"Topup company\",\n    \"tracenumber\": \"51459aae-77dd-48ba-813c-fae23c0c1896\",\n    \"notifyfrom\": true,\n    \"notifyto\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/airtime/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airtime",
										"validate"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
						},
						{
							"name": "Request was successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"amount\": 25,\n    \"to\": \"+251997289566\",\n    \"description\": \"Topup company ref code s89287294 25 Birr, USD 1.12\",\n    \"settlementamount\": \"USD 1.12\",\n    \"type\": \"PHONE\",\n    \"currency\": \"ETB\",\n    \"fromname\": \"Topup company\",\n    \"tracenumber\": \"51459aae-77dd-48ba-813c-fae23c0c1896\",\n    \"notifyfrom\": true,\n    \"notifyto\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/airtime/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airtime",
										"validate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"LUC00000248255ETH\",\n \"amount\": 163,\n \"to\": \"+251942283485\",\n \"fee\": 4.1,\n \"status\": \"PROCESSED\",\n \"statusdetail\": \"NEW_MEMBER_TRANSFER\",\n \"statuscomment\": {},\n \"date\": \"2016-12-01T08:33:31Z\",\n \"processdate\": \"2016-12-01T08:33:31Z\",\n \"description\": \"Mekele Driving institute I283742143 december fee\",\n \"settlementamount\": \"USD 10.34\",\n \"toname\": \"Hiwot Tadesse\",\n \"toaccount\": \"2346772:CUS\",\n \"currency\": \"ETB\",\n \"from\": \"2683473\",\n \"fromname\": \"Abebe Tewodros Gulilat\",\n \"fromaccount\": \"2346772:CUS\",\n \"tracenumber\": \"5f0e8400-e29b-41d4-a716-49f65b446371\",\n \"referenceid\": \"r\",\n \"invoiceid\": \"WJO19STXS1GLJ04EO4SN6MHN0N9AIQ9Q\"\n}"
						}
					]
				},
				{
					"name": "Find an airtime topup transfer by id.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airtime/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airtime",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) Member mobilePhone or userCode"
								}
							]
						}
					},
					"response": [
						{
							"name": "The parameters are incorrect or the transfer could not be found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/airtime/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airtime",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
						},
						{
							"name": "The transfer details requested",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/airtime/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airtime",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"LUC00000248255ETH\",\n \"amount\": 163,\n \"to\": \"+251942283485\",\n \"fee\": 4.1,\n \"status\": \"PROCESSED\",\n \"statusdetail\": \"NEW_MEMBER_TRANSFER\",\n \"statuscomment\": {},\n \"date\": \"2016-12-01T08:33:31Z\",\n \"processdate\": \"2016-12-01T08:33:31Z\",\n \"description\": \"Mekele Driving institute I283742143 december fee\",\n \"settlementamount\": \"USD 10.34\",\n \"toname\": \"Hiwot Tadesse\",\n \"toaccount\": \"2346772:CUS\",\n \"currency\": \"ETB\",\n \"from\": \"2683473\",\n \"fromname\": \"Abebe Tewodros Gulilat\",\n \"fromaccount\": \"2346772:CUS\",\n \"tracenumber\": \"5f0e8400-e29b-41d4-a716-49f65b446371\",\n \"referenceid\": \"r\",\n \"invoiceid\": \"WJO19STXS1GLJ04EO4SN6MHN0N9AIQ9Q\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Cancel a PREPARED, RECEIVED or PENDING transfer",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"comment\": \"<string>\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/tranfers/:id/cancel",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"tranfers",
						":id",
						"cancel"
					],
					"variable": [
						{
							"key": "id",
							"value": "<string>",
							"description": "(Required) Transfer id"
						}
					]
				},
				"description": "Deprecated, use DELETE /transfers/:id instead.\nChange the status of a transfer from a PREPARED, RECEIVED or PENDING status to CANCELLED status, if allowed.\n"
			},
			"response": [
				{
					"name": "The transfer was canceled",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tranfers/:id/cancel",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tranfers",
								":id",
								"cancel"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"id\": \"LUC00000248255ETH\",\n \"amount\": 163,\n \"to\": \"+251942283485\",\n \"fee\": 4.1,\n \"status\": \"PROCESSED\",\n \"statusdetail\": \"NEW_MEMBER_TRANSFER\",\n \"statuscomment\": {},\n \"date\": \"2016-12-01T08:33:31Z\",\n \"processdate\": \"2016-12-01T08:33:31Z\",\n \"description\": \"Mekele Driving institute I283742143 december fee\",\n \"settlementamount\": \"USD 10.34\",\n \"toname\": \"Hiwot Tadesse\",\n \"toaccount\": \"2346772:CUS\",\n \"currency\": \"ETB\",\n \"from\": \"2683473\",\n \"fromname\": \"Abebe Tewodros Gulilat\",\n \"fromaccount\": \"2346772:CUS\",\n \"tracenumber\": \"5f0e8400-e29b-41d4-a716-49f65b446371\",\n \"referenceid\": \"r\",\n \"invoiceid\": \"WJO19STXS1GLJ04EO4SN6MHN0N9AIQ9Q\"\n}"
				},
				{
					"name": "The parameters are incorrect, or transfer could not be found, or permission was denied",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tranfers/:id/cancel",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tranfers",
								":id",
								"cancel"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"message\": \"AMOUNT_TOO_LOW\",\n \"details\": \"elit nostrud\",\n \"row\": -58646368\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api-et.hellocash.net/"
		},
		{
			"key": "principal",
			"value": "1754045"
		},
		{
			"key": "credentials",
			"value": "mike123@"
		},
		{
			"key": "system",
			"value": "lucy"
		}
	]
}